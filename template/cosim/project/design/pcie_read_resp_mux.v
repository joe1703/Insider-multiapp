// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pcie_read_resp_mux,hls_ip_2017_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.801000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=540,HLS_SYN_LUT=390}" *)

module pcie_read_resp_mux (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
ap_continue,
        ap_idle,
        ap_ready,
        pcie_read_resp_V_last_dout,
        pcie_read_resp_V_last_empty_n,
        pcie_read_resp_V_last_read,
        pcie_read_resp_V_data_V_dout,
        pcie_read_resp_V_data_V_empty_n,
        pcie_read_resp_V_data_V_read,
        hw_pcie_read_resp_V_last_din,
        hw_pcie_read_resp_V_last_full_n,
        hw_pcie_read_resp_V_last_write,
        hw_pcie_read_resp_V_data_V_din,
        hw_pcie_read_resp_V_data_V_full_n,
        hw_pcie_read_resp_V_data_V_write,
        cosim_dramA_read_resp_V_last_din,
        cosim_dramA_read_resp_V_last_full_n,
        cosim_dramA_read_resp_V_last_write,
        cosim_dramA_read_resp_V_data_V_din,
        cosim_dramA_read_resp_V_data_V_full_n,
        cosim_dramA_read_resp_V_data_V_write,
        cosim_dramB_read_resp_V_last_din,
        cosim_dramB_read_resp_V_last_full_n,
        cosim_dramB_read_resp_V_last_write,
        cosim_dramB_read_resp_V_data_V_din,
        cosim_dramB_read_resp_V_data_V_full_n,
        cosim_dramB_read_resp_V_data_V_write,
        cosim_dramC_read_resp_V_last_din,
        cosim_dramC_read_resp_V_last_full_n,
        cosim_dramC_read_resp_V_last_write,
        cosim_dramC_read_resp_V_data_V_din,
        cosim_dramC_read_resp_V_data_V_full_n,
        cosim_dramC_read_resp_V_data_V_write,
        cosim_dramD_read_resp_V_last_din,
        cosim_dramD_read_resp_V_last_full_n,
        cosim_dramD_read_resp_V_last_write,
        cosim_dramD_read_resp_V_data_V_din,
        cosim_dramD_read_resp_V_data_V_full_n,
        cosim_dramD_read_resp_V_data_V_write,
        pcie_read_multiplexer_read_context_V_dout,
        pcie_read_multiplexer_read_context_V_empty_n,
        pcie_read_multiplexer_read_context_V_read
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output ap_ready; output ap_continue;
input   pcie_read_resp_V_last_dout;
input   pcie_read_resp_V_last_empty_n;
output   pcie_read_resp_V_last_read;
input  [511:0] pcie_read_resp_V_data_V_dout;
input   pcie_read_resp_V_data_V_empty_n;
output   pcie_read_resp_V_data_V_read;
output   hw_pcie_read_resp_V_last_din;
input   hw_pcie_read_resp_V_last_full_n;
output   hw_pcie_read_resp_V_last_write;
output  [511:0] hw_pcie_read_resp_V_data_V_din;
input   hw_pcie_read_resp_V_data_V_full_n;
output   hw_pcie_read_resp_V_data_V_write;
output   cosim_dramA_read_resp_V_last_din;
input   cosim_dramA_read_resp_V_last_full_n;
output   cosim_dramA_read_resp_V_last_write;
output  [511:0] cosim_dramA_read_resp_V_data_V_din;
input   cosim_dramA_read_resp_V_data_V_full_n;
output   cosim_dramA_read_resp_V_data_V_write;
output   cosim_dramB_read_resp_V_last_din;
input   cosim_dramB_read_resp_V_last_full_n;
output   cosim_dramB_read_resp_V_last_write;
output  [511:0] cosim_dramB_read_resp_V_data_V_din;
input   cosim_dramB_read_resp_V_data_V_full_n;
output   cosim_dramB_read_resp_V_data_V_write;
output   cosim_dramC_read_resp_V_last_din;
input   cosim_dramC_read_resp_V_last_full_n;
output   cosim_dramC_read_resp_V_last_write;
output  [511:0] cosim_dramC_read_resp_V_data_V_din;
input   cosim_dramC_read_resp_V_data_V_full_n;
output   cosim_dramC_read_resp_V_data_V_write;
output   cosim_dramD_read_resp_V_last_din;
input   cosim_dramD_read_resp_V_last_full_n;
output   cosim_dramD_read_resp_V_last_write;
output  [511:0] cosim_dramD_read_resp_V_data_V_din;
input   cosim_dramD_read_resp_V_data_V_full_n;
output   cosim_dramD_read_resp_V_data_V_write;
input  [7:0] pcie_read_multiplexer_read_context_V_dout;
input   pcie_read_multiplexer_read_context_V_empty_n;
output   pcie_read_multiplexer_read_context_V_read;

reg ap_idle;
reg pcie_read_multiplexer_read_context_V_read;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    hw_pcie_read_resp_V_last_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_3_reg_414;
reg   [0:0] empty_n_2_reg_418;
reg   [0:0] tmp_5_reg_440;
reg    hw_pcie_read_resp_V_data_V_blk_n;
reg    cosim_dramA_read_resp_V_last_blk_n;
reg   [0:0] tmp_7_reg_444;
reg    cosim_dramA_read_resp_V_data_V_blk_n;
reg    cosim_dramB_read_resp_V_last_blk_n;
reg   [0:0] tmp_9_reg_448;
reg    cosim_dramB_read_resp_V_data_V_blk_n;
reg    cosim_dramC_read_resp_V_last_blk_n;
reg   [0:0] tmp_s_reg_452;
reg    cosim_dramC_read_resp_V_data_V_blk_n;
reg    cosim_dramD_read_resp_V_last_blk_n;
reg   [0:0] tmp_4_reg_456;
reg    cosim_dramD_read_resp_V_data_V_blk_n;
reg   [7:0] state_reg_294;
reg   [7:0] state_5_reg_315;
wire   [0:0] tmp_fu_330_p2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    cosim_dramD_read_resp_V_last1_status;
reg    ap_predicate_op63_write_state3;
wire    cosim_dramC_read_resp_V_last1_status;
reg    ap_predicate_op66_write_state3;
wire    cosim_dramB_read_resp_V_last1_status;
reg    ap_predicate_op69_write_state3;
wire    cosim_dramA_read_resp_V_last1_status;
reg    ap_predicate_op72_write_state3;
wire    hw_pcie_read_resp_V_last1_status;
reg    ap_predicate_op75_write_state3;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] tmp_3_fu_353_p2;
wire   [0:0] empty_n_2_fu_359_p1;
reg   [0:0] tmp_last_reg_422;
reg   [511:0] tmp_data_V_reg_431;
wire   [0:0] tmp_5_fu_371_p2;
wire   [0:0] tmp_7_fu_377_p2;
wire   [0:0] tmp_9_fu_383_p2;
wire   [0:0] tmp_s_fu_389_p2;
wire   [0:0] tmp_4_fu_395_p2;
reg    ap_enable_reg_pp0_iter0;
reg    ap_block_pp0_stage0_subdone;
reg   [7:0] state_phi_fu_298_p4;
wire   [7:0] p_09_0_state_fu_344_p3;
wire   [7:0] ap_phi_precharge_reg_pp0_iter0_state_2_reg_305;
reg   [7:0] state_2_phi_fu_308_p4;
wire   [7:0] p_state_2_fu_401_p3;
wire   [7:0] ap_phi_precharge_reg_pp0_iter0_state_5_reg_315;
reg    pcie_read_resp_V_last0_update;
wire   [0:0] empty_n_1_nbread_fu_236_p3_0;
reg    cosim_dramD_read_resp_V_last1_update;
reg    ap_block_pp0_stage0_01001;
reg    cosim_dramC_read_resp_V_last1_update;
reg    cosim_dramB_read_resp_V_last1_update;
reg    cosim_dramA_read_resp_V_last1_update;
reg    hw_pcie_read_resp_V_last1_update;
wire   [0:0] p_09_0_state_fu_344_p0;
wire   [0:0] p_state_2_fu_401_p0;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_221;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd1 == tmp_3_fu_353_p2)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_3_fu_353_p2) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == empty_n_2_fu_359_p1)))) begin
        state_5_reg_315 <= state_2_phi_fu_308_p4;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_3_fu_353_p2) & (1'd1 == empty_n_2_fu_359_p1) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        state_5_reg_315 <= p_state_2_fu_401_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        state_5_reg_315 <= ap_phi_precharge_reg_pp0_iter0_state_5_reg_315;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        state_reg_294 <= state_5_reg_315;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        state_reg_294 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_3_fu_353_p2))) begin
        empty_n_2_reg_418 <= empty_n_1_nbread_fu_236_p3_0;
        tmp_data_V_reg_431 <= pcie_read_resp_V_data_V_dout;
        tmp_last_reg_422 <= pcie_read_resp_V_last_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        tmp_3_reg_414 <= tmp_3_fu_353_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_3_fu_353_p2) & (1'd1 == empty_n_2_fu_359_p1) & (1'd0 == tmp_5_fu_371_p2) & (1'd0 == tmp_7_fu_377_p2) & (1'd0 == tmp_9_fu_383_p2) & (1'd0 == tmp_s_fu_389_p2))) begin
        tmp_4_reg_456 <= tmp_4_fu_395_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_3_fu_353_p2) & (1'd1 == empty_n_2_fu_359_p1))) begin
        tmp_5_reg_440 <= tmp_5_fu_371_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_3_fu_353_p2) & (1'd1 == empty_n_2_fu_359_p1) & (1'd0 == tmp_5_fu_371_p2))) begin
        tmp_7_reg_444 <= tmp_7_fu_377_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_3_fu_353_p2) & (1'd1 == empty_n_2_fu_359_p1) & (1'd0 == tmp_5_fu_371_p2) & (1'd0 == tmp_7_fu_377_p2))) begin
        tmp_9_reg_448 <= tmp_9_fu_383_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_3_fu_353_p2) & (1'd1 == empty_n_2_fu_359_p1) & (1'd0 == tmp_5_fu_371_p2) & (1'd0 == tmp_7_fu_377_p2) & (1'd0 == tmp_9_fu_383_p2))) begin
        tmp_s_reg_452 <= tmp_s_fu_389_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (tmp_3_reg_414 == 1'd0) & (empty_n_2_reg_418 == 1'd1) & (1'd0 == tmp_5_reg_440) & (1'd1 == tmp_7_reg_444))) begin
        cosim_dramA_read_resp_V_data_V_blk_n = cosim_dramA_read_resp_V_data_V_full_n;
    end else begin
        cosim_dramA_read_resp_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_predicate_op72_write_state3) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        cosim_dramA_read_resp_V_last1_update = 1'b1;
    end else begin
        cosim_dramA_read_resp_V_last1_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (tmp_3_reg_414 == 1'd0) & (empty_n_2_reg_418 == 1'd1) & (1'd0 == tmp_5_reg_440) & (1'd1 == tmp_7_reg_444))) begin
        cosim_dramA_read_resp_V_last_blk_n = cosim_dramA_read_resp_V_last_full_n;
    end else begin
        cosim_dramA_read_resp_V_last_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (tmp_3_reg_414 == 1'd0) & (empty_n_2_reg_418 == 1'd1) & (1'd0 == tmp_5_reg_440) & (1'd0 == tmp_7_reg_444) & (1'd1 == tmp_9_reg_448))) begin
        cosim_dramB_read_resp_V_data_V_blk_n = cosim_dramB_read_resp_V_data_V_full_n;
    end else begin
        cosim_dramB_read_resp_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_predicate_op69_write_state3) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        cosim_dramB_read_resp_V_last1_update = 1'b1;
    end else begin
        cosim_dramB_read_resp_V_last1_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (tmp_3_reg_414 == 1'd0) & (empty_n_2_reg_418 == 1'd1) & (1'd0 == tmp_5_reg_440) & (1'd0 == tmp_7_reg_444) & (1'd1 == tmp_9_reg_448))) begin
        cosim_dramB_read_resp_V_last_blk_n = cosim_dramB_read_resp_V_last_full_n;
    end else begin
        cosim_dramB_read_resp_V_last_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (tmp_3_reg_414 == 1'd0) & (empty_n_2_reg_418 == 1'd1) & (1'd0 == tmp_5_reg_440) & (1'd0 == tmp_7_reg_444) & (1'd0 == tmp_9_reg_448) & (1'd1 == tmp_s_reg_452))) begin
        cosim_dramC_read_resp_V_data_V_blk_n = cosim_dramC_read_resp_V_data_V_full_n;
    end else begin
        cosim_dramC_read_resp_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_predicate_op66_write_state3) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        cosim_dramC_read_resp_V_last1_update = 1'b1;
    end else begin
        cosim_dramC_read_resp_V_last1_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (tmp_3_reg_414 == 1'd0) & (empty_n_2_reg_418 == 1'd1) & (1'd0 == tmp_5_reg_440) & (1'd0 == tmp_7_reg_444) & (1'd0 == tmp_9_reg_448) & (1'd1 == tmp_s_reg_452))) begin
        cosim_dramC_read_resp_V_last_blk_n = cosim_dramC_read_resp_V_last_full_n;
    end else begin
        cosim_dramC_read_resp_V_last_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (tmp_3_reg_414 == 1'd0) & (empty_n_2_reg_418 == 1'd1) & (1'd0 == tmp_5_reg_440) & (1'd0 == tmp_7_reg_444) & (1'd0 == tmp_9_reg_448) & (1'd0 == tmp_s_reg_452) & (1'd1 == tmp_4_reg_456))) begin
        cosim_dramD_read_resp_V_data_V_blk_n = cosim_dramD_read_resp_V_data_V_full_n;
    end else begin
        cosim_dramD_read_resp_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_predicate_op63_write_state3) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        cosim_dramD_read_resp_V_last1_update = 1'b1;
    end else begin
        cosim_dramD_read_resp_V_last1_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (tmp_3_reg_414 == 1'd0) & (empty_n_2_reg_418 == 1'd1) & (1'd0 == tmp_5_reg_440) & (1'd0 == tmp_7_reg_444) & (1'd0 == tmp_9_reg_448) & (1'd0 == tmp_s_reg_452) & (1'd1 == tmp_4_reg_456))) begin
        cosim_dramD_read_resp_V_last_blk_n = cosim_dramD_read_resp_V_last_full_n;
    end else begin
        cosim_dramD_read_resp_V_last_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (tmp_3_reg_414 == 1'd0) & (empty_n_2_reg_418 == 1'd1) & (1'd1 == tmp_5_reg_440))) begin
        hw_pcie_read_resp_V_data_V_blk_n = hw_pcie_read_resp_V_data_V_full_n;
    end else begin
        hw_pcie_read_resp_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (1'b1 == ap_predicate_op75_write_state3) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        hw_pcie_read_resp_V_last1_update = 1'b1;
    end else begin
        hw_pcie_read_resp_V_last1_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (tmp_3_reg_414 == 1'd0) & (empty_n_2_reg_418 == 1'd1) & (1'd1 == tmp_5_reg_440))) begin
        hw_pcie_read_resp_V_last_blk_n = hw_pcie_read_resp_V_last_full_n;
    end else begin
        hw_pcie_read_resp_V_last_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd1 == tmp_fu_330_p2) & (1'b1 == pcie_read_multiplexer_read_context_V_empty_n))) begin
        pcie_read_multiplexer_read_context_V_read = 1'b1;
    end else begin
        pcie_read_multiplexer_read_context_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == tmp_3_fu_353_p2) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == (pcie_read_resp_V_last_empty_n & pcie_read_resp_V_data_V_empty_n)))) begin
        pcie_read_resp_V_last0_update = 1'b1;
    end else begin
        pcie_read_resp_V_last0_update = 1'b0;
    end
end

always @ (*) begin
    if ((ap_condition_221 == 1'b1)) begin
        if ((1'd0 == tmp_fu_330_p2)) begin
            state_2_phi_fu_308_p4 = state_phi_fu_298_p4;
        end else if ((1'd1 == tmp_fu_330_p2)) begin
            state_2_phi_fu_308_p4 = p_09_0_state_fu_344_p3;
        end else begin
            state_2_phi_fu_308_p4 = ap_phi_precharge_reg_pp0_iter0_state_2_reg_305;
        end
    end else begin
        state_2_phi_fu_308_p4 = ap_phi_precharge_reg_pp0_iter0_state_2_reg_305;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        state_phi_fu_298_p4 = state_5_reg_315;
    end else begin
        state_phi_fu_298_p4 = state_reg_294;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((1'b1 == ap_enable_reg_pp0_iter1) & (((1'b0 == cosim_dramD_read_resp_V_last1_status) & (1'b1 == ap_predicate_op63_write_state3)) | ((1'b0 == cosim_dramC_read_resp_V_last1_status) & (1'b1 == ap_predicate_op66_write_state3)) | ((1'b0 == cosim_dramB_read_resp_V_last1_status) & (1'b1 == ap_predicate_op69_write_state3)) | ((1'b0 == cosim_dramA_read_resp_V_last1_status) & (1'b1 == ap_predicate_op72_write_state3)) | ((1'b0 == hw_pcie_read_resp_V_last1_status) & (1'b1 == ap_predicate_op75_write_state3))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b1 == ap_enable_reg_pp0_iter1) & (((1'b0 == cosim_dramD_read_resp_V_last1_status) & (1'b1 == ap_predicate_op63_write_state3)) | ((1'b0 == cosim_dramC_read_resp_V_last1_status) & (1'b1 == ap_predicate_op66_write_state3)) | ((1'b0 == cosim_dramB_read_resp_V_last1_status) & (1'b1 == ap_predicate_op69_write_state3)) | ((1'b0 == cosim_dramA_read_resp_V_last1_status) & (1'b1 == ap_predicate_op72_write_state3)) | ((1'b0 == hw_pcie_read_resp_V_last1_status) & (1'b1 == ap_predicate_op75_write_state3))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b1 == ap_enable_reg_pp0_iter1) & (((1'b0 == cosim_dramD_read_resp_V_last1_status) & (1'b1 == ap_predicate_op63_write_state3)) | ((1'b0 == cosim_dramC_read_resp_V_last1_status) & (1'b1 == ap_predicate_op66_write_state3)) | ((1'b0 == cosim_dramB_read_resp_V_last1_status) & (1'b1 == ap_predicate_op69_write_state3)) | ((1'b0 == cosim_dramA_read_resp_V_last1_status) & (1'b1 == ap_predicate_op72_write_state3)) | ((1'b0 == hw_pcie_read_resp_V_last1_status) & (1'b1 == ap_predicate_op75_write_state3))));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((1'b0 == cosim_dramD_read_resp_V_last1_status) & (1'b1 == ap_predicate_op63_write_state3)) | ((1'b0 == cosim_dramC_read_resp_V_last1_status) & (1'b1 == ap_predicate_op66_write_state3)) | ((1'b0 == cosim_dramB_read_resp_V_last1_status) & (1'b1 == ap_predicate_op69_write_state3)) | ((1'b0 == cosim_dramA_read_resp_V_last1_status) & (1'b1 == ap_predicate_op72_write_state3)) | ((1'b0 == hw_pcie_read_resp_V_last1_status) & (1'b1 == ap_predicate_op75_write_state3)));
end

always @ (*) begin
    ap_condition_221 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0));
end

assign ap_done = 1'b0;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_precharge_reg_pp0_iter0_state_2_reg_305 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_state_5_reg_315 = 'bx;

always @ (*) begin
    ap_predicate_op63_write_state3 = ((tmp_3_reg_414 == 1'd0) & (empty_n_2_reg_418 == 1'd1) & (1'd0 == tmp_5_reg_440) & (1'd0 == tmp_7_reg_444) & (1'd0 == tmp_9_reg_448) & (1'd0 == tmp_s_reg_452) & (1'd1 == tmp_4_reg_456));
end

always @ (*) begin
    ap_predicate_op66_write_state3 = ((tmp_3_reg_414 == 1'd0) & (empty_n_2_reg_418 == 1'd1) & (1'd0 == tmp_5_reg_440) & (1'd0 == tmp_7_reg_444) & (1'd0 == tmp_9_reg_448) & (1'd1 == tmp_s_reg_452));
end

always @ (*) begin
    ap_predicate_op69_write_state3 = ((tmp_3_reg_414 == 1'd0) & (empty_n_2_reg_418 == 1'd1) & (1'd0 == tmp_5_reg_440) & (1'd0 == tmp_7_reg_444) & (1'd1 == tmp_9_reg_448));
end

always @ (*) begin
    ap_predicate_op72_write_state3 = ((tmp_3_reg_414 == 1'd0) & (empty_n_2_reg_418 == 1'd1) & (1'd0 == tmp_5_reg_440) & (1'd1 == tmp_7_reg_444));
end

always @ (*) begin
    ap_predicate_op75_write_state3 = ((tmp_3_reg_414 == 1'd0) & (empty_n_2_reg_418 == 1'd1) & (1'd1 == tmp_5_reg_440));
end

assign ap_ready = 1'b0;

assign cosim_dramA_read_resp_V_data_V_din = tmp_data_V_reg_431;

assign cosim_dramA_read_resp_V_data_V_write = cosim_dramA_read_resp_V_last1_update;

assign cosim_dramA_read_resp_V_last1_status = (cosim_dramA_read_resp_V_last_full_n & cosim_dramA_read_resp_V_data_V_full_n);

assign cosim_dramA_read_resp_V_last_din = tmp_last_reg_422;

assign cosim_dramA_read_resp_V_last_write = cosim_dramA_read_resp_V_last1_update;

assign cosim_dramB_read_resp_V_data_V_din = tmp_data_V_reg_431;

assign cosim_dramB_read_resp_V_data_V_write = cosim_dramB_read_resp_V_last1_update;

assign cosim_dramB_read_resp_V_last1_status = (cosim_dramB_read_resp_V_last_full_n & cosim_dramB_read_resp_V_data_V_full_n);

assign cosim_dramB_read_resp_V_last_din = tmp_last_reg_422;

assign cosim_dramB_read_resp_V_last_write = cosim_dramB_read_resp_V_last1_update;

assign cosim_dramC_read_resp_V_data_V_din = tmp_data_V_reg_431;

assign cosim_dramC_read_resp_V_data_V_write = cosim_dramC_read_resp_V_last1_update;

assign cosim_dramC_read_resp_V_last1_status = (cosim_dramC_read_resp_V_last_full_n & cosim_dramC_read_resp_V_data_V_full_n);

assign cosim_dramC_read_resp_V_last_din = tmp_last_reg_422;

assign cosim_dramC_read_resp_V_last_write = cosim_dramC_read_resp_V_last1_update;

assign cosim_dramD_read_resp_V_data_V_din = tmp_data_V_reg_431;

assign cosim_dramD_read_resp_V_data_V_write = cosim_dramD_read_resp_V_last1_update;

assign cosim_dramD_read_resp_V_last1_status = (cosim_dramD_read_resp_V_last_full_n & cosim_dramD_read_resp_V_data_V_full_n);

assign cosim_dramD_read_resp_V_last_din = tmp_last_reg_422;

assign cosim_dramD_read_resp_V_last_write = cosim_dramD_read_resp_V_last1_update;

assign empty_n_1_nbread_fu_236_p3_0 = (pcie_read_resp_V_last_empty_n & pcie_read_resp_V_data_V_empty_n);

assign empty_n_2_fu_359_p1 = empty_n_1_nbread_fu_236_p3_0;

assign hw_pcie_read_resp_V_data_V_din = tmp_data_V_reg_431;

assign hw_pcie_read_resp_V_data_V_write = hw_pcie_read_resp_V_last1_update;

assign hw_pcie_read_resp_V_last1_status = (hw_pcie_read_resp_V_last_full_n & hw_pcie_read_resp_V_data_V_full_n);

assign hw_pcie_read_resp_V_last_din = tmp_last_reg_422;

assign hw_pcie_read_resp_V_last_write = hw_pcie_read_resp_V_last1_update;

assign p_09_0_state_fu_344_p0 = pcie_read_multiplexer_read_context_V_empty_n;

assign p_09_0_state_fu_344_p3 = ((p_09_0_state_fu_344_p0[0:0] === 1'b1) ? pcie_read_multiplexer_read_context_V_dout : 8'd0);

assign p_state_2_fu_401_p0 = pcie_read_resp_V_last_dout;

assign p_state_2_fu_401_p3 = ((p_state_2_fu_401_p0[0:0] === 1'b1) ? 8'd0 : state_2_phi_fu_308_p4);

assign pcie_read_resp_V_data_V_read = pcie_read_resp_V_last0_update;

assign pcie_read_resp_V_last_read = pcie_read_resp_V_last0_update;

assign tmp_3_fu_353_p2 = ((state_2_phi_fu_308_p4 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_4_fu_395_p2 = ((state_2_phi_fu_308_p4 == 8'd5) ? 1'b1 : 1'b0);

assign tmp_5_fu_371_p2 = ((state_2_phi_fu_308_p4 == 8'd1) ? 1'b1 : 1'b0);

assign tmp_7_fu_377_p2 = ((state_2_phi_fu_308_p4 == 8'd2) ? 1'b1 : 1'b0);

assign tmp_9_fu_383_p2 = ((state_2_phi_fu_308_p4 == 8'd3) ? 1'b1 : 1'b0);

assign tmp_fu_330_p2 = ((state_phi_fu_298_p4 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_389_p2 = ((state_2_phi_fu_308_p4 == 8'd4) ? 1'b1 : 1'b0);

endmodule //pcie_read_resp_mux
