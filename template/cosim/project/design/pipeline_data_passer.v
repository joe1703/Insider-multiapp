// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.op
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pipeline_data_passer,hls_ip_2017_4_op,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.997000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2340,HLS_SYN_LUT=888}" *)

module pipeline_data_passer (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
ap_continue,
        ap_idle,
        ap_ready,
        reqs_pipe0_write_V_sector_off_dout,
        reqs_pipe0_write_V_sector_off_empty_n,
        reqs_pipe0_write_V_sector_off_read,
        reqs_pipe0_write_V_sector_num_dout,
        reqs_pipe0_write_V_sector_num_empty_n,
        reqs_pipe0_write_V_sector_num_read,
        reqs_pipe0_write_V_tag_dout,
        reqs_pipe0_write_V_tag_empty_n,
        reqs_pipe0_write_V_tag_read,
        reqs_pipe0_write_V_rw_dout,
        reqs_pipe0_write_V_rw_empty_n,
        reqs_pipe0_write_V_rw_read,
        reqs_pipe1_read_V_sector_off_din,
        reqs_pipe1_read_V_sector_off_full_n,
        reqs_pipe1_read_V_sector_off_write,
        reqs_pipe1_read_V_sector_num_din,
        reqs_pipe1_read_V_sector_num_full_n,
        reqs_pipe1_read_V_sector_num_write,
        reqs_pipe1_read_V_tag_din,
        reqs_pipe1_read_V_tag_full_n,
        reqs_pipe1_read_V_tag_write,
        reqs_pipe1_read_V_rw_din,
        reqs_pipe1_read_V_rw_full_n,
        reqs_pipe1_read_V_rw_write,
        reqs_pipe1_write_V_sector_off_dout,
        reqs_pipe1_write_V_sector_off_empty_n,
        reqs_pipe1_write_V_sector_off_read,
        reqs_pipe1_write_V_sector_num_dout,
        reqs_pipe1_write_V_sector_num_empty_n,
        reqs_pipe1_write_V_sector_num_read,
        reqs_pipe1_write_V_tag_dout,
        reqs_pipe1_write_V_tag_empty_n,
        reqs_pipe1_write_V_tag_read,
        reqs_pipe1_write_V_rw_dout,
        reqs_pipe1_write_V_rw_empty_n,
        reqs_pipe1_write_V_rw_read,
        reqs_pipe2_read_V_sector_off_din,
        reqs_pipe2_read_V_sector_off_full_n,
        reqs_pipe2_read_V_sector_off_write,
        reqs_pipe2_read_V_sector_num_din,
        reqs_pipe2_read_V_sector_num_full_n,
        reqs_pipe2_read_V_sector_num_write,
        reqs_pipe2_read_V_tag_din,
        reqs_pipe2_read_V_tag_full_n,
        reqs_pipe2_read_V_tag_write,
        reqs_pipe2_read_V_rw_din,
        reqs_pipe2_read_V_rw_full_n,
        reqs_pipe2_read_V_rw_write,
        data_pipe1_write_V_last_dout,
        data_pipe1_write_V_last_empty_n,
        data_pipe1_write_V_last_read,
        data_pipe1_write_V_data_V_dout,
        data_pipe1_write_V_data_V_empty_n,
        data_pipe1_write_V_data_V_read,
        data_pipe2_read_V_last_din,
        data_pipe2_read_V_last_full_n,
        data_pipe2_read_V_last_write,
        data_pipe2_read_V_data_V_din,
        data_pipe2_read_V_data_V_full_n,
        data_pipe2_read_V_data_V_write,
        data_valid_pipe1_write_V_dout,
        data_valid_pipe1_write_V_empty_n,
        data_valid_pipe1_write_V_read,
        data_valid_pipe2_read_V_din,
        data_valid_pipe2_read_V_full_n,
        data_valid_pipe2_read_V_write,
        kbuf_addr_pipe0_write_V_dout,
        kbuf_addr_pipe0_write_V_empty_n,
        kbuf_addr_pipe0_write_V_read,
        kbuf_addr_pipe2_read_V_din,
        kbuf_addr_pipe2_read_V_full_n,
        kbuf_addr_pipe2_read_V_write
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output ap_ready; output ap_continue;
input  [31:0] reqs_pipe0_write_V_sector_off_dout;
input   reqs_pipe0_write_V_sector_off_empty_n;
output   reqs_pipe0_write_V_sector_off_read;
input  [31:0] reqs_pipe0_write_V_sector_num_dout;
input   reqs_pipe0_write_V_sector_num_empty_n;
output   reqs_pipe0_write_V_sector_num_read;
input  [31:0] reqs_pipe0_write_V_tag_dout;
input   reqs_pipe0_write_V_tag_empty_n;
output   reqs_pipe0_write_V_tag_read;
input   reqs_pipe0_write_V_rw_dout;
input   reqs_pipe0_write_V_rw_empty_n;
output   reqs_pipe0_write_V_rw_read;
output  [31:0] reqs_pipe1_read_V_sector_off_din;
input   reqs_pipe1_read_V_sector_off_full_n;
output   reqs_pipe1_read_V_sector_off_write;
output  [31:0] reqs_pipe1_read_V_sector_num_din;
input   reqs_pipe1_read_V_sector_num_full_n;
output   reqs_pipe1_read_V_sector_num_write;
output  [31:0] reqs_pipe1_read_V_tag_din;
input   reqs_pipe1_read_V_tag_full_n;
output   reqs_pipe1_read_V_tag_write;
output   reqs_pipe1_read_V_rw_din;
input   reqs_pipe1_read_V_rw_full_n;
output   reqs_pipe1_read_V_rw_write;
input  [31:0] reqs_pipe1_write_V_sector_off_dout;
input   reqs_pipe1_write_V_sector_off_empty_n;
output   reqs_pipe1_write_V_sector_off_read;
input  [31:0] reqs_pipe1_write_V_sector_num_dout;
input   reqs_pipe1_write_V_sector_num_empty_n;
output   reqs_pipe1_write_V_sector_num_read;
input  [31:0] reqs_pipe1_write_V_tag_dout;
input   reqs_pipe1_write_V_tag_empty_n;
output   reqs_pipe1_write_V_tag_read;
input   reqs_pipe1_write_V_rw_dout;
input   reqs_pipe1_write_V_rw_empty_n;
output   reqs_pipe1_write_V_rw_read;
output  [31:0] reqs_pipe2_read_V_sector_off_din;
input   reqs_pipe2_read_V_sector_off_full_n;
output   reqs_pipe2_read_V_sector_off_write;
output  [31:0] reqs_pipe2_read_V_sector_num_din;
input   reqs_pipe2_read_V_sector_num_full_n;
output   reqs_pipe2_read_V_sector_num_write;
output  [31:0] reqs_pipe2_read_V_tag_din;
input   reqs_pipe2_read_V_tag_full_n;
output   reqs_pipe2_read_V_tag_write;
output   reqs_pipe2_read_V_rw_din;
input   reqs_pipe2_read_V_rw_full_n;
output   reqs_pipe2_read_V_rw_write;
input   data_pipe1_write_V_last_dout;
input   data_pipe1_write_V_last_empty_n;
output   data_pipe1_write_V_last_read;
input  [511:0] data_pipe1_write_V_data_V_dout;
input   data_pipe1_write_V_data_V_empty_n;
output   data_pipe1_write_V_data_V_read;
output   data_pipe2_read_V_last_din;
input   data_pipe2_read_V_last_full_n;
output   data_pipe2_read_V_last_write;
output  [511:0] data_pipe2_read_V_data_V_din;
input   data_pipe2_read_V_data_V_full_n;
output   data_pipe2_read_V_data_V_write;
input   data_valid_pipe1_write_V_dout;
input   data_valid_pipe1_write_V_empty_n;
output   data_valid_pipe1_write_V_read;
output   data_valid_pipe2_read_V_din;
input   data_valid_pipe2_read_V_full_n;
output   data_valid_pipe2_read_V_write;
input  [63:0] kbuf_addr_pipe0_write_V_dout;
input   kbuf_addr_pipe0_write_V_empty_n;
output   kbuf_addr_pipe0_write_V_read;
output  [63:0] kbuf_addr_pipe2_read_V_din;
input   kbuf_addr_pipe2_read_V_full_n;
output   kbuf_addr_pipe2_read_V_write;

reg ap_idle;
reg data_valid_pipe1_write_V_read;
reg data_valid_pipe2_read_V_write;
reg kbuf_addr_pipe0_write_V_read;
reg kbuf_addr_pipe2_read_V_write;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] valid_req0_reg_494;
reg   [0:0] valid_req1_reg_506;
reg   [0:0] valid_data_reg_518;
reg   [0:0] valid_valid_reg_530;
reg   [0:0] vali_reg_542;
reg   [511:0] data_data_1_s_reg_554;
reg   [0:0] data_data_0_s_reg_565;
reg   [0:0] p_022_3_s_reg_576;
reg   [31:0] p_022_2_s_reg_587;
reg   [31:0] p_022_1_s_reg_598;
reg   [31:0] p_022_0_s_reg_609;
reg   [0:0] p_0_3_s_reg_620;
reg   [31:0] p_0_2_s_reg_631;
reg   [31:0] p_0_1_s_reg_642;
reg   [31:0] p_0_0_s_reg_653;
reg   [63:0] p_020_s_reg_664;
reg   [0:0] p_026_s_reg_675;
wire   [0:0] empty_n_10_fu_1067_p1;
reg   [0:0] empty_n_10_reg_1200;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] ap_phi_mux_valid_req0_phi_fu_498_p4;
wire   [0:0] empty_n_11_fu_1087_p1;
reg   [0:0] empty_n_11_reg_1230;
reg   [0:0] ap_phi_mux_valid_req1_phi_fu_510_p4;
wire   [0:0] empty_n_12_fu_1107_p1;
reg   [0:0] empty_n_12_reg_1260;
reg   [0:0] ap_phi_mux_valid_data_phi_fu_522_p4;
wire   [0:0] empty_n_13_fu_1119_p1;
reg   [0:0] empty_n_13_reg_1278;
reg   [0:0] ap_phi_mux_valid_valid_phi_fu_534_p4;
wire   [0:0] empty_n_14_fu_1127_p1;
reg   [0:0] empty_n_14_reg_1290;
reg   [0:0] ap_phi_mux_vali_phi_fu_546_p4;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_valid_req0_3_phi_fu_792_p4;
wire    ap_block_pp0_stage0;
reg   [0:0] ap_phi_mux_valid_req1_3_phi_fu_905_p4;
reg   [0:0] ap_phi_mux_valid_data_3_phi_fu_972_p4;
reg   [0:0] ap_phi_mux_valid_valid_3_phi_fu_1016_p4;
reg   [0:0] ap_phi_mux_vali_3_phi_fu_1060_p4;
reg   [511:0] ap_phi_mux_data_data_1_2_phi_fu_948_p4;
reg   [0:0] ap_phi_mux_data_data_0_2_phi_fu_960_p4;
reg   [0:0] ap_phi_mux_p_022_3_2_phi_fu_857_p4;
reg   [31:0] ap_phi_mux_p_022_2_2_phi_fu_869_p4;
reg   [31:0] ap_phi_mux_p_022_1_2_phi_fu_881_p4;
reg   [31:0] ap_phi_mux_p_022_0_2_phi_fu_893_p4;
reg   [0:0] ap_phi_mux_p_0_3_2_phi_fu_744_p4;
reg   [31:0] ap_phi_mux_p_0_2_2_phi_fu_756_p4;
reg   [31:0] ap_phi_mux_p_0_1_2_phi_fu_768_p4;
reg   [31:0] ap_phi_mux_p_0_0_2_phi_fu_780_p4;
reg   [63:0] ap_phi_mux_p_020_2_phi_fu_1048_p4;
reg   [0:0] ap_phi_mux_p_026_2_phi_fu_1004_p4;
reg   [0:0] ap_phi_mux_tmp_rw_phi_fu_689_p4;
reg   [0:0] ap_phi_reg_pp0_iter1_tmp_rw_reg_686;
wire   [0:0] ap_phi_reg_pp0_iter0_tmp_rw_reg_686;
reg   [31:0] ap_phi_mux_tmp_tag_phi_fu_700_p4;
reg   [31:0] ap_phi_reg_pp0_iter1_tmp_tag_reg_697;
wire   [31:0] ap_phi_reg_pp0_iter0_tmp_tag_reg_697;
reg   [31:0] ap_phi_mux_tmp_sector_num_phi_fu_711_p4;
reg   [31:0] ap_phi_reg_pp0_iter1_tmp_sector_num_reg_708;
wire   [31:0] ap_phi_reg_pp0_iter0_tmp_sector_num_reg_708;
reg   [31:0] ap_phi_mux_tmp_sector_off_phi_fu_722_p4;
reg   [31:0] ap_phi_reg_pp0_iter1_tmp_sector_off_reg_719;
wire   [31:0] ap_phi_reg_pp0_iter0_tmp_sector_off_reg_719;
reg   [0:0] ap_phi_mux_valid_req0_1_phi_fu_733_p4;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_req0_1_reg_730;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_req0_1_reg_730;
reg   [0:0] ap_phi_reg_pp0_iter1_p_0_3_2_reg_740;
wire   [0:0] ap_phi_reg_pp0_iter0_p_0_3_2_reg_740;
reg   [31:0] ap_phi_reg_pp0_iter1_p_0_2_2_reg_752;
wire   [31:0] ap_phi_reg_pp0_iter0_p_0_2_2_reg_752;
reg   [31:0] ap_phi_reg_pp0_iter1_p_0_1_2_reg_764;
wire   [31:0] ap_phi_reg_pp0_iter0_p_0_1_2_reg_764;
reg   [31:0] ap_phi_reg_pp0_iter1_p_0_0_2_reg_776;
wire   [31:0] ap_phi_reg_pp0_iter0_p_0_0_2_reg_776;
wire   [0:0] p_valid_req0_1_fu_1141_p2;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_req0_3_reg_788;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_req0_3_reg_788;
reg   [0:0] ap_phi_mux_tmp_rw_2_phi_fu_802_p4;
reg   [0:0] ap_phi_reg_pp0_iter1_tmp_rw_2_reg_799;
wire   [0:0] ap_phi_reg_pp0_iter0_tmp_rw_2_reg_799;
reg   [31:0] ap_phi_mux_tmp_tag_2_phi_fu_813_p4;
reg   [31:0] ap_phi_reg_pp0_iter1_tmp_tag_2_reg_810;
wire   [31:0] ap_phi_reg_pp0_iter0_tmp_tag_2_reg_810;
reg   [31:0] ap_phi_mux_tmp_sector_num_2_phi_fu_824_p4;
reg   [31:0] ap_phi_reg_pp0_iter1_tmp_sector_num_2_reg_821;
wire   [31:0] ap_phi_reg_pp0_iter0_tmp_sector_num_2_reg_821;
reg   [31:0] ap_phi_mux_tmp_sector_off_2_phi_fu_835_p4;
reg   [31:0] ap_phi_reg_pp0_iter1_tmp_sector_off_2_reg_832;
wire   [31:0] ap_phi_reg_pp0_iter0_tmp_sector_off_2_reg_832;
reg   [0:0] ap_phi_mux_valid_req1_1_phi_fu_846_p4;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_req1_1_reg_843;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_req1_1_reg_843;
reg   [0:0] ap_phi_reg_pp0_iter1_p_022_3_2_reg_853;
wire   [0:0] ap_phi_reg_pp0_iter0_p_022_3_2_reg_853;
reg   [31:0] ap_phi_reg_pp0_iter1_p_022_2_2_reg_865;
wire   [31:0] ap_phi_reg_pp0_iter0_p_022_2_2_reg_865;
reg   [31:0] ap_phi_reg_pp0_iter1_p_022_1_2_reg_877;
wire   [31:0] ap_phi_reg_pp0_iter0_p_022_1_2_reg_877;
reg   [31:0] ap_phi_reg_pp0_iter1_p_022_0_2_reg_889;
wire   [31:0] ap_phi_reg_pp0_iter0_p_022_0_2_reg_889;
wire   [0:0] p_valid_req1_1_fu_1154_p2;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_req1_3_reg_901;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_req1_3_reg_901;
reg   [511:0] ap_phi_mux_tmp_data_V_phi_fu_915_p4;
reg   [511:0] ap_phi_reg_pp0_iter1_tmp_data_V_reg_912;
wire   [511:0] ap_phi_reg_pp0_iter0_tmp_data_V_reg_912;
reg   [0:0] ap_phi_mux_tmp_last_phi_fu_926_p4;
reg   [0:0] ap_phi_reg_pp0_iter1_tmp_last_reg_923;
wire   [0:0] ap_phi_reg_pp0_iter0_tmp_last_reg_923;
reg   [0:0] ap_phi_mux_valid_data_1_phi_fu_937_p4;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_data_1_reg_934;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_data_1_reg_934;
reg   [511:0] ap_phi_reg_pp0_iter1_data_data_1_2_reg_944;
wire   [511:0] ap_phi_reg_pp0_iter0_data_data_1_2_reg_944;
reg   [0:0] ap_phi_reg_pp0_iter1_data_data_0_2_reg_956;
wire   [0:0] ap_phi_reg_pp0_iter0_data_data_0_2_reg_956;
wire   [0:0] p_valid_data_1_fu_1167_p2;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_data_3_reg_968;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_data_3_reg_968;
reg   [0:0] ap_phi_mux_tmp_phi_fu_982_p4;
reg   [0:0] ap_phi_reg_pp0_iter1_tmp_reg_979;
wire   [0:0] ap_phi_reg_pp0_iter0_tmp_reg_979;
reg   [0:0] ap_phi_mux_valid_valid_1_phi_fu_993_p4;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_valid_1_reg_990;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_valid_1_reg_990;
reg   [0:0] ap_phi_reg_pp0_iter1_p_026_2_reg_1000;
wire   [0:0] ap_phi_reg_pp0_iter0_p_026_2_reg_1000;
wire   [0:0] p_valid_valid_1_fu_1180_p2;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_valid_3_reg_1012;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_valid_3_reg_1012;
reg   [63:0] ap_phi_mux_tmp_2_phi_fu_1026_p4;
reg   [63:0] ap_phi_reg_pp0_iter1_tmp_2_reg_1023;
wire   [63:0] ap_phi_reg_pp0_iter0_tmp_2_reg_1023;
reg   [0:0] ap_phi_mux_vali_1_phi_fu_1037_p4;
reg   [0:0] ap_phi_reg_pp0_iter1_vali_1_reg_1034;
wire   [0:0] ap_phi_reg_pp0_iter0_vali_1_reg_1034;
reg   [63:0] ap_phi_reg_pp0_iter1_p_020_2_reg_1044;
wire   [63:0] ap_phi_reg_pp0_iter0_p_020_2_reg_1044;
wire   [0:0] p_vali_1_fu_1193_p2;
reg   [0:0] ap_phi_reg_pp0_iter1_vali_3_reg_1056;
wire   [0:0] ap_phi_reg_pp0_iter0_vali_3_reg_1056;
reg    reqs_pipe0_write_V_rw0_update;
reg    ap_condition_487;
wire   [0:0] empty_n_nbread_fu_394_p5_0;
reg    reqs_pipe1_write_V_rw0_update;
reg    ap_condition_500;
wire   [0:0] empty_n_1_nbread_fu_406_p5_0;
reg    data_pipe1_write_V_last0_update;
wire   [0:0] empty_n_2_nbread_fu_418_p3_0;
reg    reqs_pipe1_read_V_rw1_update;
reg    ap_condition_533;
wire   [0:0] full_n_nbwrite_fu_438_p9;
wire    ap_block_pp0_stage0_01001;
reg    reqs_pipe2_read_V_rw1_update;
reg    ap_condition_545;
wire   [0:0] full_n_1_nbwrite_fu_454_p9;
reg    data_pipe2_read_V_last1_update;
wire   [0:0] full_n_2_nbwrite_fu_470_p5;
wire   [0:0] not_full_n_i_fu_1135_p2;
wire   [0:0] not_full_n_i5_fu_1148_p2;
wire   [0:0] not_full_n_i9_fu_1161_p2;
wire   [0:0] not_full_n_i1_fu_1174_p0;
wire   [0:0] not_full_n_i1_fu_1174_p2;
wire   [0:0] not_full_n_i2_fu_1187_p0;
wire   [0:0] not_full_n_i2_fu_1187_p2;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_334;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_valid_data_phi_fu_522_p4 == 1'd0) & (empty_n_12_fu_1107_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_data_data_0_2_reg_956 <= data_pipe1_write_V_last_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_data_0_2_reg_956 <= ap_phi_reg_pp0_iter0_data_data_0_2_reg_956;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_valid_data_phi_fu_522_p4 == 1'd0) & (empty_n_12_fu_1107_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_data_data_1_2_reg_944 <= data_pipe1_write_V_data_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_data_data_1_2_reg_944 <= ap_phi_reg_pp0_iter0_data_data_1_2_reg_944;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_vali_phi_fu_546_p4 == 1'd0) & (empty_n_14_fu_1127_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_020_2_reg_1044 <= kbuf_addr_pipe0_write_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_020_2_reg_1044 <= ap_phi_reg_pp0_iter0_p_020_2_reg_1044;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_valid_req1_phi_fu_510_p4 == 1'd0) & (empty_n_11_fu_1087_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_022_0_2_reg_889 <= reqs_pipe1_write_V_sector_off_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_022_0_2_reg_889 <= ap_phi_reg_pp0_iter0_p_022_0_2_reg_889;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_valid_req1_phi_fu_510_p4 == 1'd0) & (empty_n_11_fu_1087_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_022_1_2_reg_877 <= reqs_pipe1_write_V_sector_num_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_022_1_2_reg_877 <= ap_phi_reg_pp0_iter0_p_022_1_2_reg_877;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_valid_req1_phi_fu_510_p4 == 1'd0) & (empty_n_11_fu_1087_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_022_2_2_reg_865 <= reqs_pipe1_write_V_tag_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_022_2_2_reg_865 <= ap_phi_reg_pp0_iter0_p_022_2_2_reg_865;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_valid_req1_phi_fu_510_p4 == 1'd0) & (empty_n_11_fu_1087_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_022_3_2_reg_853 <= reqs_pipe1_write_V_rw_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_022_3_2_reg_853 <= ap_phi_reg_pp0_iter0_p_022_3_2_reg_853;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_valid_valid_phi_fu_534_p4 == 1'd0) & (empty_n_13_fu_1119_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_026_2_reg_1000 <= data_valid_pipe1_write_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_026_2_reg_1000 <= ap_phi_reg_pp0_iter0_p_026_2_reg_1000;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_valid_req0_phi_fu_498_p4 == 1'd0) & (empty_n_10_fu_1067_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_0_0_2_reg_776 <= reqs_pipe0_write_V_sector_off_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_0_0_2_reg_776 <= ap_phi_reg_pp0_iter0_p_0_0_2_reg_776;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_valid_req0_phi_fu_498_p4 == 1'd0) & (empty_n_10_fu_1067_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_0_1_2_reg_764 <= reqs_pipe0_write_V_sector_num_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_0_1_2_reg_764 <= ap_phi_reg_pp0_iter0_p_0_1_2_reg_764;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_valid_req0_phi_fu_498_p4 == 1'd0) & (empty_n_10_fu_1067_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_0_2_2_reg_752 <= reqs_pipe0_write_V_tag_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_0_2_2_reg_752 <= ap_phi_reg_pp0_iter0_p_0_2_2_reg_752;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_valid_req0_phi_fu_498_p4 == 1'd0) & (empty_n_10_fu_1067_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_0_3_2_reg_740 <= reqs_pipe0_write_V_rw_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_0_3_2_reg_740 <= ap_phi_reg_pp0_iter0_p_0_3_2_reg_740;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((empty_n_14_fu_1127_p1 == 1'd1) & (ap_phi_mux_vali_phi_fu_546_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_2_reg_1023 <= kbuf_addr_pipe0_write_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_2_reg_1023 <= ap_phi_reg_pp0_iter0_tmp_2_reg_1023;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((empty_n_12_fu_1107_p1 == 1'd1) & (ap_phi_mux_valid_data_phi_fu_522_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_data_V_reg_912 <= data_pipe1_write_V_data_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_data_V_reg_912 <= ap_phi_reg_pp0_iter0_tmp_data_V_reg_912;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((empty_n_12_fu_1107_p1 == 1'd1) & (ap_phi_mux_valid_data_phi_fu_522_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_last_reg_923 <= data_pipe1_write_V_last_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_last_reg_923 <= ap_phi_reg_pp0_iter0_tmp_last_reg_923;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((empty_n_13_fu_1119_p1 == 1'd1) & (ap_phi_mux_valid_valid_phi_fu_534_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_reg_979 <= data_valid_pipe1_write_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_reg_979 <= ap_phi_reg_pp0_iter0_tmp_reg_979;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((empty_n_11_fu_1087_p1 == 1'd1) & (ap_phi_mux_valid_req1_phi_fu_510_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_rw_2_reg_799 <= reqs_pipe1_write_V_rw_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_rw_2_reg_799 <= ap_phi_reg_pp0_iter0_tmp_rw_2_reg_799;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_valid_req0_phi_fu_498_p4 == 1'd0) & (empty_n_10_fu_1067_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_tmp_rw_reg_686 <= reqs_pipe0_write_V_rw_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_rw_reg_686 <= ap_phi_reg_pp0_iter0_tmp_rw_reg_686;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((empty_n_11_fu_1087_p1 == 1'd1) & (ap_phi_mux_valid_req1_phi_fu_510_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_sector_num_2_reg_821 <= reqs_pipe1_write_V_sector_num_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_sector_num_2_reg_821 <= ap_phi_reg_pp0_iter0_tmp_sector_num_2_reg_821;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_valid_req0_phi_fu_498_p4 == 1'd0) & (empty_n_10_fu_1067_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_tmp_sector_num_reg_708 <= reqs_pipe0_write_V_sector_num_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_sector_num_reg_708 <= ap_phi_reg_pp0_iter0_tmp_sector_num_reg_708;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((empty_n_11_fu_1087_p1 == 1'd1) & (ap_phi_mux_valid_req1_phi_fu_510_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_sector_off_2_reg_832 <= reqs_pipe1_write_V_sector_off_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_sector_off_2_reg_832 <= ap_phi_reg_pp0_iter0_tmp_sector_off_2_reg_832;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_valid_req0_phi_fu_498_p4 == 1'd0) & (empty_n_10_fu_1067_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_tmp_sector_off_reg_719 <= reqs_pipe0_write_V_sector_off_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_sector_off_reg_719 <= ap_phi_reg_pp0_iter0_tmp_sector_off_reg_719;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((empty_n_11_fu_1087_p1 == 1'd1) & (ap_phi_mux_valid_req1_phi_fu_510_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_tag_2_reg_810 <= reqs_pipe1_write_V_tag_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_tag_2_reg_810 <= ap_phi_reg_pp0_iter0_tmp_tag_2_reg_810;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_valid_req0_phi_fu_498_p4 == 1'd0) & (empty_n_10_fu_1067_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_tmp_tag_reg_697 <= reqs_pipe0_write_V_tag_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_tag_reg_697 <= ap_phi_reg_pp0_iter0_tmp_tag_reg_697;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((empty_n_14_fu_1127_p1 == 1'd1) & (ap_phi_mux_vali_phi_fu_546_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_vali_1_reg_1034 <= kbuf_addr_pipe0_write_V_empty_n;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_vali_1_reg_1034 <= ap_phi_reg_pp0_iter0_vali_1_reg_1034;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_vali_phi_fu_546_p4 == 1'd0) & (empty_n_14_fu_1127_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_vali_3_reg_1056 <= kbuf_addr_pipe0_write_V_empty_n;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_vali_3_reg_1056 <= ap_phi_reg_pp0_iter0_vali_3_reg_1056;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((empty_n_12_fu_1107_p1 == 1'd1) & (ap_phi_mux_valid_data_phi_fu_522_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_valid_data_1_reg_934 <= empty_n_2_nbread_fu_418_p3_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_valid_data_1_reg_934 <= ap_phi_reg_pp0_iter0_valid_data_1_reg_934;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_valid_data_phi_fu_522_p4 == 1'd0) & (empty_n_12_fu_1107_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_valid_data_3_reg_968 <= empty_n_2_nbread_fu_418_p3_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_valid_data_3_reg_968 <= ap_phi_reg_pp0_iter0_valid_data_3_reg_968;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_valid_req0_phi_fu_498_p4 == 1'd0) & (empty_n_10_fu_1067_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_valid_req0_1_reg_730 <= empty_n_nbread_fu_394_p5_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_valid_req0_1_reg_730 <= ap_phi_reg_pp0_iter0_valid_req0_1_reg_730;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_valid_req0_phi_fu_498_p4 == 1'd0) & (empty_n_10_fu_1067_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_valid_req0_3_reg_788 <= empty_n_nbread_fu_394_p5_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_valid_req0_3_reg_788 <= ap_phi_reg_pp0_iter0_valid_req0_3_reg_788;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((empty_n_11_fu_1087_p1 == 1'd1) & (ap_phi_mux_valid_req1_phi_fu_510_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_valid_req1_1_reg_843 <= empty_n_1_nbread_fu_406_p5_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_valid_req1_1_reg_843 <= ap_phi_reg_pp0_iter0_valid_req1_1_reg_843;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_valid_req1_phi_fu_510_p4 == 1'd0) & (empty_n_11_fu_1087_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_valid_req1_3_reg_901 <= empty_n_1_nbread_fu_406_p5_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_valid_req1_3_reg_901 <= ap_phi_reg_pp0_iter0_valid_req1_3_reg_901;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((empty_n_13_fu_1119_p1 == 1'd1) & (ap_phi_mux_valid_valid_phi_fu_534_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_valid_valid_1_reg_990 <= data_valid_pipe1_write_V_empty_n;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_valid_valid_1_reg_990 <= ap_phi_reg_pp0_iter0_valid_valid_1_reg_990;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_valid_valid_phi_fu_534_p4 == 1'd0) & (empty_n_13_fu_1119_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_valid_valid_3_reg_1012 <= data_valid_pipe1_write_V_empty_n;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_valid_valid_3_reg_1012 <= ap_phi_reg_pp0_iter0_valid_valid_3_reg_1012;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        vali_reg_542 <= ap_phi_mux_vali_3_phi_fu_1060_p4;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        vali_reg_542 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        valid_data_reg_518 <= ap_phi_mux_valid_data_3_phi_fu_972_p4;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        valid_data_reg_518 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        valid_req0_reg_494 <= ap_phi_mux_valid_req0_3_phi_fu_792_p4;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        valid_req0_reg_494 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        valid_req1_reg_506 <= ap_phi_mux_valid_req1_3_phi_fu_905_p4;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        valid_req1_reg_506 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        valid_valid_reg_530 <= ap_phi_mux_valid_valid_3_phi_fu_1016_p4;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        valid_valid_reg_530 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_data_0_s_reg_565 <= ap_phi_mux_data_data_0_2_phi_fu_960_p4;
        data_data_1_s_reg_554 <= ap_phi_mux_data_data_1_2_phi_fu_948_p4;
        p_020_s_reg_664 <= ap_phi_mux_p_020_2_phi_fu_1048_p4;
        p_022_0_s_reg_609 <= ap_phi_mux_p_022_0_2_phi_fu_893_p4;
        p_022_1_s_reg_598 <= ap_phi_mux_p_022_1_2_phi_fu_881_p4;
        p_022_2_s_reg_587 <= ap_phi_mux_p_022_2_2_phi_fu_869_p4;
        p_022_3_s_reg_576 <= ap_phi_mux_p_022_3_2_phi_fu_857_p4;
        p_026_s_reg_675 <= ap_phi_mux_p_026_2_phi_fu_1004_p4;
        p_0_0_s_reg_653 <= ap_phi_mux_p_0_0_2_phi_fu_780_p4;
        p_0_1_s_reg_642 <= ap_phi_mux_p_0_1_2_phi_fu_768_p4;
        p_0_2_s_reg_631 <= ap_phi_mux_p_0_2_2_phi_fu_756_p4;
        p_0_3_s_reg_620 <= ap_phi_mux_p_0_3_2_phi_fu_744_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_valid_req0_phi_fu_498_p4 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_n_10_reg_1200 <= empty_n_nbread_fu_394_p5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_valid_req1_phi_fu_510_p4 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_n_11_reg_1230 <= empty_n_1_nbread_fu_406_p5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_valid_data_phi_fu_522_p4 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_n_12_reg_1260 <= empty_n_2_nbread_fu_418_p3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_valid_valid_phi_fu_534_p4 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_n_13_reg_1278 <= data_valid_pipe1_write_V_empty_n;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_vali_phi_fu_546_p4 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_n_14_reg_1290 <= kbuf_addr_pipe0_write_V_empty_n;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_12_reg_1260 == 1'd1) | (valid_data_reg_518 == 1'd1)))) begin
        ap_phi_mux_data_data_0_2_phi_fu_960_p4 = ap_phi_mux_tmp_last_phi_fu_926_p4;
    end else begin
        ap_phi_mux_data_data_0_2_phi_fu_960_p4 = ap_phi_reg_pp0_iter1_data_data_0_2_reg_956;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_12_reg_1260 == 1'd1) | (valid_data_reg_518 == 1'd1)))) begin
        ap_phi_mux_data_data_1_2_phi_fu_948_p4 = ap_phi_mux_tmp_data_V_phi_fu_915_p4;
    end else begin
        ap_phi_mux_data_data_1_2_phi_fu_948_p4 = ap_phi_reg_pp0_iter1_data_data_1_2_reg_944;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_14_reg_1290 == 1'd1) | (vali_reg_542 == 1'd1)))) begin
        ap_phi_mux_p_020_2_phi_fu_1048_p4 = ap_phi_mux_tmp_2_phi_fu_1026_p4;
    end else begin
        ap_phi_mux_p_020_2_phi_fu_1048_p4 = ap_phi_reg_pp0_iter1_p_020_2_reg_1044;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_11_reg_1230 == 1'd1) | (valid_req1_reg_506 == 1'd1)))) begin
        ap_phi_mux_p_022_0_2_phi_fu_893_p4 = ap_phi_mux_tmp_sector_off_2_phi_fu_835_p4;
    end else begin
        ap_phi_mux_p_022_0_2_phi_fu_893_p4 = ap_phi_reg_pp0_iter1_p_022_0_2_reg_889;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_11_reg_1230 == 1'd1) | (valid_req1_reg_506 == 1'd1)))) begin
        ap_phi_mux_p_022_1_2_phi_fu_881_p4 = ap_phi_mux_tmp_sector_num_2_phi_fu_824_p4;
    end else begin
        ap_phi_mux_p_022_1_2_phi_fu_881_p4 = ap_phi_reg_pp0_iter1_p_022_1_2_reg_877;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_11_reg_1230 == 1'd1) | (valid_req1_reg_506 == 1'd1)))) begin
        ap_phi_mux_p_022_2_2_phi_fu_869_p4 = ap_phi_mux_tmp_tag_2_phi_fu_813_p4;
    end else begin
        ap_phi_mux_p_022_2_2_phi_fu_869_p4 = ap_phi_reg_pp0_iter1_p_022_2_2_reg_865;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_11_reg_1230 == 1'd1) | (valid_req1_reg_506 == 1'd1)))) begin
        ap_phi_mux_p_022_3_2_phi_fu_857_p4 = ap_phi_mux_tmp_rw_2_phi_fu_802_p4;
    end else begin
        ap_phi_mux_p_022_3_2_phi_fu_857_p4 = ap_phi_reg_pp0_iter1_p_022_3_2_reg_853;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_13_reg_1278 == 1'd1) | (valid_valid_reg_530 == 1'd1)))) begin
        ap_phi_mux_p_026_2_phi_fu_1004_p4 = ap_phi_mux_tmp_phi_fu_982_p4;
    end else begin
        ap_phi_mux_p_026_2_phi_fu_1004_p4 = ap_phi_reg_pp0_iter1_p_026_2_reg_1000;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_10_reg_1200 == 1'd1) | (valid_req0_reg_494 == 1'd1)))) begin
        ap_phi_mux_p_0_0_2_phi_fu_780_p4 = ap_phi_mux_tmp_sector_off_phi_fu_722_p4;
    end else begin
        ap_phi_mux_p_0_0_2_phi_fu_780_p4 = ap_phi_reg_pp0_iter1_p_0_0_2_reg_776;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_10_reg_1200 == 1'd1) | (valid_req0_reg_494 == 1'd1)))) begin
        ap_phi_mux_p_0_1_2_phi_fu_768_p4 = ap_phi_mux_tmp_sector_num_phi_fu_711_p4;
    end else begin
        ap_phi_mux_p_0_1_2_phi_fu_768_p4 = ap_phi_reg_pp0_iter1_p_0_1_2_reg_764;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_10_reg_1200 == 1'd1) | (valid_req0_reg_494 == 1'd1)))) begin
        ap_phi_mux_p_0_2_2_phi_fu_756_p4 = ap_phi_mux_tmp_tag_phi_fu_700_p4;
    end else begin
        ap_phi_mux_p_0_2_2_phi_fu_756_p4 = ap_phi_reg_pp0_iter1_p_0_2_2_reg_752;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_10_reg_1200 == 1'd1) | (valid_req0_reg_494 == 1'd1)))) begin
        ap_phi_mux_p_0_3_2_phi_fu_744_p4 = ap_phi_mux_tmp_rw_phi_fu_689_p4;
    end else begin
        ap_phi_mux_p_0_3_2_phi_fu_744_p4 = ap_phi_reg_pp0_iter1_p_0_3_2_reg_740;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (vali_reg_542 == 1'd1))) begin
        ap_phi_mux_tmp_2_phi_fu_1026_p4 = p_020_s_reg_664;
    end else begin
        ap_phi_mux_tmp_2_phi_fu_1026_p4 = ap_phi_reg_pp0_iter1_tmp_2_reg_1023;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_data_reg_518 == 1'd1))) begin
        ap_phi_mux_tmp_data_V_phi_fu_915_p4 = data_data_1_s_reg_554;
    end else begin
        ap_phi_mux_tmp_data_V_phi_fu_915_p4 = ap_phi_reg_pp0_iter1_tmp_data_V_reg_912;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_data_reg_518 == 1'd1))) begin
        ap_phi_mux_tmp_last_phi_fu_926_p4 = data_data_0_s_reg_565;
    end else begin
        ap_phi_mux_tmp_last_phi_fu_926_p4 = ap_phi_reg_pp0_iter1_tmp_last_reg_923;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_valid_reg_530 == 1'd1))) begin
        ap_phi_mux_tmp_phi_fu_982_p4 = p_026_s_reg_675;
    end else begin
        ap_phi_mux_tmp_phi_fu_982_p4 = ap_phi_reg_pp0_iter1_tmp_reg_979;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_req1_reg_506 == 1'd1))) begin
        ap_phi_mux_tmp_rw_2_phi_fu_802_p4 = p_022_3_s_reg_576;
    end else begin
        ap_phi_mux_tmp_rw_2_phi_fu_802_p4 = ap_phi_reg_pp0_iter1_tmp_rw_2_reg_799;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_req0_reg_494 == 1'd1))) begin
        ap_phi_mux_tmp_rw_phi_fu_689_p4 = p_0_3_s_reg_620;
    end else begin
        ap_phi_mux_tmp_rw_phi_fu_689_p4 = ap_phi_reg_pp0_iter1_tmp_rw_reg_686;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_req1_reg_506 == 1'd1))) begin
        ap_phi_mux_tmp_sector_num_2_phi_fu_824_p4 = p_022_1_s_reg_598;
    end else begin
        ap_phi_mux_tmp_sector_num_2_phi_fu_824_p4 = ap_phi_reg_pp0_iter1_tmp_sector_num_2_reg_821;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_req0_reg_494 == 1'd1))) begin
        ap_phi_mux_tmp_sector_num_phi_fu_711_p4 = p_0_1_s_reg_642;
    end else begin
        ap_phi_mux_tmp_sector_num_phi_fu_711_p4 = ap_phi_reg_pp0_iter1_tmp_sector_num_reg_708;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_req1_reg_506 == 1'd1))) begin
        ap_phi_mux_tmp_sector_off_2_phi_fu_835_p4 = p_022_0_s_reg_609;
    end else begin
        ap_phi_mux_tmp_sector_off_2_phi_fu_835_p4 = ap_phi_reg_pp0_iter1_tmp_sector_off_2_reg_832;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_req0_reg_494 == 1'd1))) begin
        ap_phi_mux_tmp_sector_off_phi_fu_722_p4 = p_0_0_s_reg_653;
    end else begin
        ap_phi_mux_tmp_sector_off_phi_fu_722_p4 = ap_phi_reg_pp0_iter1_tmp_sector_off_reg_719;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_req1_reg_506 == 1'd1))) begin
        ap_phi_mux_tmp_tag_2_phi_fu_813_p4 = p_022_2_s_reg_587;
    end else begin
        ap_phi_mux_tmp_tag_2_phi_fu_813_p4 = ap_phi_reg_pp0_iter1_tmp_tag_2_reg_810;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_req0_reg_494 == 1'd1))) begin
        ap_phi_mux_tmp_tag_phi_fu_700_p4 = p_0_2_s_reg_631;
    end else begin
        ap_phi_mux_tmp_tag_phi_fu_700_p4 = ap_phi_reg_pp0_iter1_tmp_tag_reg_697;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (vali_reg_542 == 1'd1))) begin
        ap_phi_mux_vali_1_phi_fu_1037_p4 = vali_reg_542;
    end else begin
        ap_phi_mux_vali_1_phi_fu_1037_p4 = ap_phi_reg_pp0_iter1_vali_1_reg_1034;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_14_reg_1290 == 1'd1) | (vali_reg_542 == 1'd1)))) begin
        ap_phi_mux_vali_3_phi_fu_1060_p4 = p_vali_1_fu_1193_p2;
    end else begin
        ap_phi_mux_vali_3_phi_fu_1060_p4 = ap_phi_reg_pp0_iter1_vali_3_reg_1056;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_vali_phi_fu_546_p4 = ap_phi_mux_vali_3_phi_fu_1060_p4;
    end else begin
        ap_phi_mux_vali_phi_fu_546_p4 = vali_reg_542;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_data_reg_518 == 1'd1))) begin
        ap_phi_mux_valid_data_1_phi_fu_937_p4 = valid_data_reg_518;
    end else begin
        ap_phi_mux_valid_data_1_phi_fu_937_p4 = ap_phi_reg_pp0_iter1_valid_data_1_reg_934;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_12_reg_1260 == 1'd1) | (valid_data_reg_518 == 1'd1)))) begin
        ap_phi_mux_valid_data_3_phi_fu_972_p4 = p_valid_data_1_fu_1167_p2;
    end else begin
        ap_phi_mux_valid_data_3_phi_fu_972_p4 = ap_phi_reg_pp0_iter1_valid_data_3_reg_968;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_valid_data_phi_fu_522_p4 = ap_phi_mux_valid_data_3_phi_fu_972_p4;
    end else begin
        ap_phi_mux_valid_data_phi_fu_522_p4 = valid_data_reg_518;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_req0_reg_494 == 1'd1))) begin
        ap_phi_mux_valid_req0_1_phi_fu_733_p4 = valid_req0_reg_494;
    end else begin
        ap_phi_mux_valid_req0_1_phi_fu_733_p4 = ap_phi_reg_pp0_iter1_valid_req0_1_reg_730;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_10_reg_1200 == 1'd1) | (valid_req0_reg_494 == 1'd1)))) begin
        ap_phi_mux_valid_req0_3_phi_fu_792_p4 = p_valid_req0_1_fu_1141_p2;
    end else begin
        ap_phi_mux_valid_req0_3_phi_fu_792_p4 = ap_phi_reg_pp0_iter1_valid_req0_3_reg_788;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_valid_req0_phi_fu_498_p4 = ap_phi_mux_valid_req0_3_phi_fu_792_p4;
    end else begin
        ap_phi_mux_valid_req0_phi_fu_498_p4 = valid_req0_reg_494;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_req1_reg_506 == 1'd1))) begin
        ap_phi_mux_valid_req1_1_phi_fu_846_p4 = valid_req1_reg_506;
    end else begin
        ap_phi_mux_valid_req1_1_phi_fu_846_p4 = ap_phi_reg_pp0_iter1_valid_req1_1_reg_843;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_11_reg_1230 == 1'd1) | (valid_req1_reg_506 == 1'd1)))) begin
        ap_phi_mux_valid_req1_3_phi_fu_905_p4 = p_valid_req1_1_fu_1154_p2;
    end else begin
        ap_phi_mux_valid_req1_3_phi_fu_905_p4 = ap_phi_reg_pp0_iter1_valid_req1_3_reg_901;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_valid_req1_phi_fu_510_p4 = ap_phi_mux_valid_req1_3_phi_fu_905_p4;
    end else begin
        ap_phi_mux_valid_req1_phi_fu_510_p4 = valid_req1_reg_506;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_valid_reg_530 == 1'd1))) begin
        ap_phi_mux_valid_valid_1_phi_fu_993_p4 = valid_valid_reg_530;
    end else begin
        ap_phi_mux_valid_valid_1_phi_fu_993_p4 = ap_phi_reg_pp0_iter1_valid_valid_1_reg_990;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_13_reg_1278 == 1'd1) | (valid_valid_reg_530 == 1'd1)))) begin
        ap_phi_mux_valid_valid_3_phi_fu_1016_p4 = p_valid_valid_1_fu_1180_p2;
    end else begin
        ap_phi_mux_valid_valid_3_phi_fu_1016_p4 = ap_phi_reg_pp0_iter1_valid_valid_3_reg_1012;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_valid_valid_phi_fu_534_p4 = ap_phi_mux_valid_valid_3_phi_fu_1016_p4;
    end else begin
        ap_phi_mux_valid_valid_phi_fu_534_p4 = valid_valid_reg_530;
    end
end

always @ (*) begin
    if (((ap_phi_mux_valid_data_phi_fu_522_p4 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & ((data_pipe1_write_V_last_empty_n & data_pipe1_write_V_data_V_empty_n) == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_pipe1_write_V_last0_update = 1'b1;
    end else begin
        data_pipe1_write_V_last0_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & ((data_pipe2_read_V_last_full_n & data_pipe2_read_V_data_V_full_n) == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_12_reg_1260 == 1'd1) | (valid_data_reg_518 == 1'd1)))) begin
        data_pipe2_read_V_last1_update = 1'b1;
    end else begin
        data_pipe2_read_V_last1_update = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_valid_valid_phi_fu_534_p4 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (data_valid_pipe1_write_V_empty_n == 1'b1))) begin
        data_valid_pipe1_write_V_read = 1'b1;
    end else begin
        data_valid_pipe1_write_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (data_valid_pipe2_read_V_full_n == 1'b1) & ((empty_n_13_reg_1278 == 1'd1) | (valid_valid_reg_530 == 1'd1)))) begin
        data_valid_pipe2_read_V_write = 1'b1;
    end else begin
        data_valid_pipe2_read_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_vali_phi_fu_546_p4 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (kbuf_addr_pipe0_write_V_empty_n == 1'b1))) begin
        kbuf_addr_pipe0_write_V_read = 1'b1;
    end else begin
        kbuf_addr_pipe0_write_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (kbuf_addr_pipe2_read_V_full_n == 1'b1) & ((empty_n_14_reg_1290 == 1'd1) | (vali_reg_542 == 1'd1)))) begin
        kbuf_addr_pipe2_read_V_write = 1'b1;
    end else begin
        kbuf_addr_pipe2_read_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_condition_487) & (ap_phi_mux_valid_req0_phi_fu_498_p4 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reqs_pipe0_write_V_rw0_update = 1'b1;
    end else begin
        reqs_pipe0_write_V_rw0_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_condition_533) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_10_reg_1200 == 1'd1) | (valid_req0_reg_494 == 1'd1)))) begin
        reqs_pipe1_read_V_rw1_update = 1'b1;
    end else begin
        reqs_pipe1_read_V_rw1_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_condition_500) & (ap_phi_mux_valid_req1_phi_fu_510_p4 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reqs_pipe1_write_V_rw0_update = 1'b1;
    end else begin
        reqs_pipe1_write_V_rw0_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_condition_545) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_11_reg_1230 == 1'd1) | (valid_req1_reg_506 == 1'd1)))) begin
        reqs_pipe2_read_V_rw1_update = 1'b1;
    end else begin
        reqs_pipe2_read_V_rw1_update = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_334 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_487 = ((reqs_pipe0_write_V_tag_empty_n & reqs_pipe0_write_V_sector_off_empty_n & reqs_pipe0_write_V_sector_num_empty_n & reqs_pipe0_write_V_rw_empty_n) == 1'b1);
end

always @ (*) begin
    ap_condition_500 = ((reqs_pipe1_write_V_tag_empty_n & reqs_pipe1_write_V_sector_off_empty_n & reqs_pipe1_write_V_sector_num_empty_n & reqs_pipe1_write_V_rw_empty_n) == 1'b1);
end

always @ (*) begin
    ap_condition_533 = ((reqs_pipe1_read_V_tag_full_n & reqs_pipe1_read_V_sector_off_full_n & reqs_pipe1_read_V_sector_num_full_n & reqs_pipe1_read_V_rw_full_n) == 1'b1);
end

always @ (*) begin
    ap_condition_545 = ((reqs_pipe2_read_V_tag_full_n & reqs_pipe2_read_V_sector_off_full_n & reqs_pipe2_read_V_sector_num_full_n & reqs_pipe2_read_V_rw_full_n) == 1'b1);
end

assign ap_done = 1'b0;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_data_data_0_2_reg_956 = 'bx;

assign ap_phi_reg_pp0_iter0_data_data_1_2_reg_944 = 'bx;

assign ap_phi_reg_pp0_iter0_p_020_2_reg_1044 = 'bx;

assign ap_phi_reg_pp0_iter0_p_022_0_2_reg_889 = 'bx;

assign ap_phi_reg_pp0_iter0_p_022_1_2_reg_877 = 'bx;

assign ap_phi_reg_pp0_iter0_p_022_2_2_reg_865 = 'bx;

assign ap_phi_reg_pp0_iter0_p_022_3_2_reg_853 = 'bx;

assign ap_phi_reg_pp0_iter0_p_026_2_reg_1000 = 'bx;

assign ap_phi_reg_pp0_iter0_p_0_0_2_reg_776 = 'bx;

assign ap_phi_reg_pp0_iter0_p_0_1_2_reg_764 = 'bx;

assign ap_phi_reg_pp0_iter0_p_0_2_2_reg_752 = 'bx;

assign ap_phi_reg_pp0_iter0_p_0_3_2_reg_740 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_2_reg_1023 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_data_V_reg_912 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_last_reg_923 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_reg_979 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_rw_2_reg_799 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_rw_reg_686 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_sector_num_2_reg_821 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_sector_num_reg_708 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_sector_off_2_reg_832 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_sector_off_reg_719 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_tag_2_reg_810 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_tag_reg_697 = 'bx;

assign ap_phi_reg_pp0_iter0_vali_1_reg_1034 = 'bx;

assign ap_phi_reg_pp0_iter0_vali_3_reg_1056 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_data_1_reg_934 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_data_3_reg_968 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_req0_1_reg_730 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_req0_3_reg_788 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_req1_1_reg_843 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_req1_3_reg_901 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_valid_1_reg_990 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_valid_3_reg_1012 = 'bx;

assign ap_ready = 1'b0;

assign data_pipe1_write_V_data_V_read = data_pipe1_write_V_last0_update;

assign data_pipe1_write_V_last_read = data_pipe1_write_V_last0_update;

assign data_pipe2_read_V_data_V_din = ap_phi_mux_tmp_data_V_phi_fu_915_p4;

assign data_pipe2_read_V_data_V_write = data_pipe2_read_V_last1_update;

assign data_pipe2_read_V_last_din = ap_phi_mux_tmp_last_phi_fu_926_p4;

assign data_pipe2_read_V_last_write = data_pipe2_read_V_last1_update;

assign data_valid_pipe2_read_V_din = ap_phi_mux_tmp_phi_fu_982_p4;

assign empty_n_10_fu_1067_p1 = empty_n_nbread_fu_394_p5_0;

assign empty_n_11_fu_1087_p1 = empty_n_1_nbread_fu_406_p5_0;

assign empty_n_12_fu_1107_p1 = empty_n_2_nbread_fu_418_p3_0;

assign empty_n_13_fu_1119_p1 = data_valid_pipe1_write_V_empty_n;

assign empty_n_14_fu_1127_p1 = kbuf_addr_pipe0_write_V_empty_n;

assign empty_n_1_nbread_fu_406_p5_0 = (reqs_pipe1_write_V_tag_empty_n & reqs_pipe1_write_V_sector_off_empty_n & reqs_pipe1_write_V_sector_num_empty_n & reqs_pipe1_write_V_rw_empty_n);

assign empty_n_2_nbread_fu_418_p3_0 = (data_pipe1_write_V_last_empty_n & data_pipe1_write_V_data_V_empty_n);

assign empty_n_nbread_fu_394_p5_0 = (reqs_pipe0_write_V_tag_empty_n & reqs_pipe0_write_V_sector_off_empty_n & reqs_pipe0_write_V_sector_num_empty_n & reqs_pipe0_write_V_rw_empty_n);

assign full_n_1_nbwrite_fu_454_p9 = (reqs_pipe2_read_V_tag_full_n & reqs_pipe2_read_V_sector_off_full_n & reqs_pipe2_read_V_sector_num_full_n & reqs_pipe2_read_V_rw_full_n);

assign full_n_2_nbwrite_fu_470_p5 = (data_pipe2_read_V_last_full_n & data_pipe2_read_V_data_V_full_n);

assign full_n_nbwrite_fu_438_p9 = (reqs_pipe1_read_V_tag_full_n & reqs_pipe1_read_V_sector_off_full_n & reqs_pipe1_read_V_sector_num_full_n & reqs_pipe1_read_V_rw_full_n);

assign kbuf_addr_pipe2_read_V_din = ap_phi_mux_tmp_2_phi_fu_1026_p4;

assign not_full_n_i1_fu_1174_p0 = data_valid_pipe2_read_V_full_n;

assign not_full_n_i1_fu_1174_p2 = (not_full_n_i1_fu_1174_p0 ^ 1'd1);

assign not_full_n_i2_fu_1187_p0 = kbuf_addr_pipe2_read_V_full_n;

assign not_full_n_i2_fu_1187_p2 = (not_full_n_i2_fu_1187_p0 ^ 1'd1);

assign not_full_n_i5_fu_1148_p2 = (full_n_1_nbwrite_fu_454_p9 ^ 1'd1);

assign not_full_n_i9_fu_1161_p2 = (full_n_2_nbwrite_fu_470_p5 ^ 1'd1);

assign not_full_n_i_fu_1135_p2 = (full_n_nbwrite_fu_438_p9 ^ 1'd1);

assign p_vali_1_fu_1193_p2 = (not_full_n_i2_fu_1187_p2 & ap_phi_mux_vali_1_phi_fu_1037_p4);

assign p_valid_data_1_fu_1167_p2 = (not_full_n_i9_fu_1161_p2 & ap_phi_mux_valid_data_1_phi_fu_937_p4);

assign p_valid_req0_1_fu_1141_p2 = (not_full_n_i_fu_1135_p2 & ap_phi_mux_valid_req0_1_phi_fu_733_p4);

assign p_valid_req1_1_fu_1154_p2 = (not_full_n_i5_fu_1148_p2 & ap_phi_mux_valid_req1_1_phi_fu_846_p4);

assign p_valid_valid_1_fu_1180_p2 = (not_full_n_i1_fu_1174_p2 & ap_phi_mux_valid_valid_1_phi_fu_993_p4);

assign reqs_pipe0_write_V_rw_read = reqs_pipe0_write_V_rw0_update;

assign reqs_pipe0_write_V_sector_num_read = reqs_pipe0_write_V_rw0_update;

assign reqs_pipe0_write_V_sector_off_read = reqs_pipe0_write_V_rw0_update;

assign reqs_pipe0_write_V_tag_read = reqs_pipe0_write_V_rw0_update;

assign reqs_pipe1_read_V_rw_din = ap_phi_mux_tmp_rw_phi_fu_689_p4;

assign reqs_pipe1_read_V_rw_write = reqs_pipe1_read_V_rw1_update;

assign reqs_pipe1_read_V_sector_num_din = ap_phi_mux_tmp_sector_num_phi_fu_711_p4;

assign reqs_pipe1_read_V_sector_num_write = reqs_pipe1_read_V_rw1_update;

assign reqs_pipe1_read_V_sector_off_din = ap_phi_mux_tmp_sector_off_phi_fu_722_p4;

assign reqs_pipe1_read_V_sector_off_write = reqs_pipe1_read_V_rw1_update;

assign reqs_pipe1_read_V_tag_din = ap_phi_mux_tmp_tag_phi_fu_700_p4;

assign reqs_pipe1_read_V_tag_write = reqs_pipe1_read_V_rw1_update;

assign reqs_pipe1_write_V_rw_read = reqs_pipe1_write_V_rw0_update;

assign reqs_pipe1_write_V_sector_num_read = reqs_pipe1_write_V_rw0_update;

assign reqs_pipe1_write_V_sector_off_read = reqs_pipe1_write_V_rw0_update;

assign reqs_pipe1_write_V_tag_read = reqs_pipe1_write_V_rw0_update;

assign reqs_pipe2_read_V_rw_din = ap_phi_mux_tmp_rw_2_phi_fu_802_p4;

assign reqs_pipe2_read_V_rw_write = reqs_pipe2_read_V_rw1_update;

assign reqs_pipe2_read_V_sector_num_din = ap_phi_mux_tmp_sector_num_2_phi_fu_824_p4;

assign reqs_pipe2_read_V_sector_num_write = reqs_pipe2_read_V_rw1_update;

assign reqs_pipe2_read_V_sector_off_din = ap_phi_mux_tmp_sector_off_2_phi_fu_835_p4;

assign reqs_pipe2_read_V_sector_off_write = reqs_pipe2_read_V_rw1_update;

assign reqs_pipe2_read_V_tag_din = ap_phi_mux_tmp_tag_2_phi_fu_813_p4;

assign reqs_pipe2_read_V_tag_write = reqs_pipe2_read_V_rw1_update;

endmodule //pipeline_data_passer
