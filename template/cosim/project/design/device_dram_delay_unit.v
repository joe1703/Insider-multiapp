// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="device_dram_delay_unit,hls_ip_2017_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.162250,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1020,HLS_SYN_LUT=981}" *)

module device_dram_delay_unit (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
ap_continue,
        ap_idle,
        ap_ready,
        device_delay_cycle_cnts_V_dout,
        device_delay_cycle_cnts_V_empty_n,
        device_delay_cycle_cnts_V_read,
        device_dram_read_req_with_time_V_req_num_dout,
        device_dram_read_req_with_time_V_req_num_empty_n,
        device_dram_read_req_with_time_V_req_num_read,
        device_dram_read_req_with_time_V_req_addr_dout,
        device_dram_read_req_with_time_V_req_addr_empty_n,
        device_dram_read_req_with_time_V_req_addr_read,
        device_dram_read_req_with_time_V_time_dout,
        device_dram_read_req_with_time_V_time_empty_n,
        device_dram_read_req_with_time_V_time_read,
        device_dram_write_req_apply_with_time_V_req_apply_num_dout,
        device_dram_write_req_apply_with_time_V_req_apply_num_empty_n,
        device_dram_write_req_apply_with_time_V_req_apply_num_read,
        device_dram_write_req_apply_with_time_V_req_apply_addr_dout,
        device_dram_write_req_apply_with_time_V_req_apply_addr_empty_n,
        device_dram_write_req_apply_with_time_V_req_apply_addr_read,
        device_dram_write_req_apply_with_time_V_time_dout,
        device_dram_write_req_apply_with_time_V_time_empty_n,
        device_dram_write_req_apply_with_time_V_time_read,
        device_dram_read_req_delayed_V_num_din,
        device_dram_read_req_delayed_V_num_full_n,
        device_dram_read_req_delayed_V_num_write,
        device_dram_read_req_delayed_V_addr_din,
        device_dram_read_req_delayed_V_addr_full_n,
        device_dram_read_req_delayed_V_addr_write,
        device_dram_write_req_apply_delayed_V_num_din,
        device_dram_write_req_apply_delayed_V_num_full_n,
        device_dram_write_req_apply_delayed_V_num_write,
        device_dram_write_req_apply_delayed_V_addr_din,
        device_dram_write_req_apply_delayed_V_addr_full_n,
        device_dram_write_req_apply_delayed_V_addr_write
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output ap_ready; output ap_continue;
input  [31:0] device_delay_cycle_cnts_V_dout;
input   device_delay_cycle_cnts_V_empty_n;
output   device_delay_cycle_cnts_V_read;
input  [7:0] device_dram_read_req_with_time_V_req_num_dout;
input   device_dram_read_req_with_time_V_req_num_empty_n;
output   device_dram_read_req_with_time_V_req_num_read;
input  [63:0] device_dram_read_req_with_time_V_req_addr_dout;
input   device_dram_read_req_with_time_V_req_addr_empty_n;
output   device_dram_read_req_with_time_V_req_addr_read;
input  [63:0] device_dram_read_req_with_time_V_time_dout;
input   device_dram_read_req_with_time_V_time_empty_n;
output   device_dram_read_req_with_time_V_time_read;
input  [7:0] device_dram_write_req_apply_with_time_V_req_apply_num_dout;
input   device_dram_write_req_apply_with_time_V_req_apply_num_empty_n;
output   device_dram_write_req_apply_with_time_V_req_apply_num_read;
input  [63:0] device_dram_write_req_apply_with_time_V_req_apply_addr_dout;
input   device_dram_write_req_apply_with_time_V_req_apply_addr_empty_n;
output   device_dram_write_req_apply_with_time_V_req_apply_addr_read;
input  [63:0] device_dram_write_req_apply_with_time_V_time_dout;
input   device_dram_write_req_apply_with_time_V_time_empty_n;
output   device_dram_write_req_apply_with_time_V_time_read;
output  [7:0] device_dram_read_req_delayed_V_num_din;
input   device_dram_read_req_delayed_V_num_full_n;
output   device_dram_read_req_delayed_V_num_write;
output  [63:0] device_dram_read_req_delayed_V_addr_din;
input   device_dram_read_req_delayed_V_addr_full_n;
output   device_dram_read_req_delayed_V_addr_write;
output  [7:0] device_dram_write_req_apply_delayed_V_num_din;
input   device_dram_write_req_apply_delayed_V_num_full_n;
output   device_dram_write_req_apply_delayed_V_num_write;
output  [63:0] device_dram_write_req_apply_delayed_V_addr_din;
input   device_dram_write_req_apply_delayed_V_addr_full_n;
output   device_dram_write_req_apply_delayed_V_addr_write;

reg ap_idle;
reg device_delay_cycle_cnts_V_read;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] p_010_1_s_reg_248;
reg   [63:0] p_010_0_1_s_reg_260;
reg   [7:0] p_010_0_0_s_reg_272;
reg   [63:0] p_011_1_s_reg_284;
reg   [63:0] p_011_0_1_s_reg_296;
reg   [7:0] p_011_0_0_s_reg_308;
reg   [63:0] delay_cycle_cnt_reg_320;
reg   [0:0] valid_read_req_with_time_reg_331;
reg   [0:0] valid_write_req_apply_with_time_reg_343;
reg   [63:0] time_reg_355;
wire   [63:0] delay_cycle_cnt_1_fu_580_p3;
reg   [63:0] delay_cycle_cnt_1_reg_710;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] empty_n_5_fu_588_p1;
reg   [0:0] empty_n_5_reg_717;
reg   [0:0] valid_read_req_with_time_phi_fu_335_p4;
wire   [0:0] empty_n_6_fu_604_p1;
reg   [0:0] empty_n_6_reg_741;
reg   [0:0] valid_write_req_apply_with_time_phi_fu_347_p4;
wire   [63:0] time_1_fu_620_p2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_subdone;
reg   [63:0] p_010_1_2_phi_fu_513_p6;
reg   [63:0] p_010_1_s_phi_fu_252_p4;
wire    ap_block_pp0_stage0;
reg   [63:0] p_010_0_1_2_phi_fu_528_p6;
reg   [63:0] p_010_0_1_s_phi_fu_264_p4;
reg   [7:0] p_010_0_0_2_phi_fu_543_p6;
reg   [7:0] p_010_0_0_s_phi_fu_276_p4;
reg   [63:0] p_011_1_2_phi_fu_412_p6;
reg   [63:0] p_011_1_s_phi_fu_288_p4;
reg   [63:0] p_011_0_1_2_phi_fu_427_p6;
reg   [63:0] p_011_0_1_s_phi_fu_300_p4;
reg   [7:0] p_011_0_0_2_phi_fu_442_p6;
reg   [7:0] p_011_0_0_s_phi_fu_312_p4;
reg   [63:0] delay_cycle_cnt_phi_fu_324_p4;
reg   [0:0] valid_read_req_with_time_4_phi_fu_457_p6;
reg   [0:0] valid_write_req_apply_with_time_4_phi_fu_558_p6;
wire   [63:0] ap_phi_precharge_reg_pp0_iter0_p_011_1_1_reg_366;
reg   [63:0] ap_phi_precharge_reg_pp0_iter1_p_011_1_1_reg_366;
wire   [63:0] ap_phi_precharge_reg_pp0_iter0_tmp_addr_reg_376;
reg   [63:0] ap_phi_precharge_reg_pp0_iter1_tmp_addr_reg_376;
wire   [7:0] ap_phi_precharge_reg_pp0_iter0_tmp_num_reg_387;
reg   [7:0] ap_phi_precharge_reg_pp0_iter1_tmp_num_reg_387;
wire   [0:0] ap_phi_precharge_reg_pp0_iter0_valid_read_req_with_time_1_reg_398;
reg   [0:0] ap_phi_precharge_reg_pp0_iter1_valid_read_req_with_time_1_reg_398;
reg   [63:0] ap_phi_precharge_reg_pp0_iter1_p_011_1_2_reg_408;
wire   [0:0] or_cond_fu_649_p2;
wire   [63:0] ap_phi_precharge_reg_pp0_iter0_p_011_1_2_reg_408;
reg   [63:0] ap_phi_precharge_reg_pp0_iter1_p_011_0_1_2_reg_423;
wire   [63:0] ap_phi_precharge_reg_pp0_iter0_p_011_0_1_2_reg_423;
reg   [7:0] ap_phi_precharge_reg_pp0_iter1_p_011_0_0_2_reg_438;
wire   [7:0] ap_phi_precharge_reg_pp0_iter0_p_011_0_0_2_reg_438;
wire   [0:0] p_valid_read_req_with_time_1_fu_661_p2;
reg   [0:0] ap_phi_precharge_reg_pp0_iter1_valid_read_req_with_time_4_reg_453;
wire   [0:0] ap_phi_precharge_reg_pp0_iter0_valid_read_req_with_time_4_reg_453;
wire   [63:0] ap_phi_precharge_reg_pp0_iter0_p_010_1_1_reg_467;
reg   [63:0] ap_phi_precharge_reg_pp0_iter1_p_010_1_1_reg_467;
wire   [63:0] ap_phi_precharge_reg_pp0_iter0_tmp_addr_1_reg_477;
reg   [63:0] ap_phi_precharge_reg_pp0_iter1_tmp_addr_1_reg_477;
wire   [7:0] ap_phi_precharge_reg_pp0_iter0_tmp_num_1_reg_488;
reg   [7:0] ap_phi_precharge_reg_pp0_iter1_tmp_num_1_reg_488;
wire   [0:0] ap_phi_precharge_reg_pp0_iter0_valid_write_req_apply_with_time_1_reg_499;
reg   [0:0] ap_phi_precharge_reg_pp0_iter1_valid_write_req_apply_with_time_1_reg_499;
reg   [63:0] ap_phi_precharge_reg_pp0_iter1_p_010_1_2_reg_509;
wire   [0:0] or_cond1_fu_691_p2;
wire   [63:0] ap_phi_precharge_reg_pp0_iter0_p_010_1_2_reg_509;
reg   [63:0] ap_phi_precharge_reg_pp0_iter1_p_010_0_1_2_reg_524;
wire   [63:0] ap_phi_precharge_reg_pp0_iter0_p_010_0_1_2_reg_524;
reg   [7:0] ap_phi_precharge_reg_pp0_iter1_p_010_0_0_2_reg_539;
wire   [7:0] ap_phi_precharge_reg_pp0_iter0_p_010_0_0_2_reg_539;
wire   [0:0] p_valid_write_req_apply_with_time_1_fu_703_p2;
reg   [0:0] ap_phi_precharge_reg_pp0_iter1_valid_write_req_apply_with_time_4_reg_554;
wire   [0:0] ap_phi_precharge_reg_pp0_iter0_valid_write_req_apply_with_time_4_reg_554;
reg    device_dram_read_req_with_time_V_time0_update;
wire   [0:0] empty_n_3_nbread_fu_208_p4_0;
reg    device_dram_write_req_apply_with_time_V_time0_update;
wire   [0:0] empty_n_4_nbread_fu_218_p4_0;
reg    device_dram_read_req_delayed_V_num1_update;
wire   [0:0] full_n_nbwrite_fu_228_p5;
wire    ap_block_pp0_stage0_01001;
reg    device_dram_write_req_apply_delayed_V_num1_update;
wire   [0:0] full_n_1_nbwrite_fu_238_p5;
wire   [0:0] delay_cycle_cnt_1_fu_580_p0;
wire   [63:0] delay_cycle_cnt_2_fu_576_p1;
wire   [63:0] tmp_3_fu_626_p2;
wire   [0:0] ult_fu_631_p2;
wire   [0:0] rev6_fu_637_p2;
wire   [0:0] tmp_5_fu_643_p2;
wire   [0:0] not_full_n_i_fu_655_p2;
wire   [63:0] tmp_8_fu_668_p2;
wire   [0:0] ult7_fu_673_p2;
wire   [0:0] rev8_fu_679_p2;
wire   [0:0] tmp_s_fu_685_p2;
wire   [0:0] not_full_n_i7_fu_697_p2;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_134;
reg    ap_condition_216;
reg    ap_condition_226;
reg    ap_condition_175;
reg    ap_condition_262;
reg    ap_condition_272;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_134 == 1'b1)) begin
        if (((1'd0 == valid_write_req_apply_with_time_phi_fu_347_p4) & (1'd0 == empty_n_6_fu_604_p1))) begin
            ap_phi_precharge_reg_pp0_iter1_p_010_0_0_2_reg_539 <= device_dram_write_req_apply_with_time_V_req_apply_num_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_p_010_0_0_2_reg_539 <= ap_phi_precharge_reg_pp0_iter0_p_010_0_0_2_reg_539;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_134 == 1'b1)) begin
        if (((1'd0 == valid_write_req_apply_with_time_phi_fu_347_p4) & (1'd0 == empty_n_6_fu_604_p1))) begin
            ap_phi_precharge_reg_pp0_iter1_p_010_0_1_2_reg_524 <= device_dram_write_req_apply_with_time_V_req_apply_addr_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_p_010_0_1_2_reg_524 <= ap_phi_precharge_reg_pp0_iter0_p_010_0_1_2_reg_524;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_134 == 1'b1)) begin
        if (((1'd0 == valid_write_req_apply_with_time_phi_fu_347_p4) & (empty_n_6_fu_604_p1 == 1'd1))) begin
            ap_phi_precharge_reg_pp0_iter1_p_010_1_1_reg_467 <= device_dram_write_req_apply_with_time_V_time_dout;
        end else if ((valid_write_req_apply_with_time_phi_fu_347_p4 == 1'd1)) begin
            ap_phi_precharge_reg_pp0_iter1_p_010_1_1_reg_467 <= p_010_1_s_phi_fu_252_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_p_010_1_1_reg_467 <= ap_phi_precharge_reg_pp0_iter0_p_010_1_1_reg_467;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_134 == 1'b1)) begin
        if (((1'd0 == valid_write_req_apply_with_time_phi_fu_347_p4) & (1'd0 == empty_n_6_fu_604_p1))) begin
            ap_phi_precharge_reg_pp0_iter1_p_010_1_2_reg_509 <= device_dram_write_req_apply_with_time_V_time_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_p_010_1_2_reg_509 <= ap_phi_precharge_reg_pp0_iter0_p_010_1_2_reg_509;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_134 == 1'b1)) begin
        if (((valid_read_req_with_time_phi_fu_335_p4 == 1'd0) & (empty_n_5_fu_588_p1 == 1'd0))) begin
            ap_phi_precharge_reg_pp0_iter1_p_011_0_0_2_reg_438 <= device_dram_read_req_with_time_V_req_num_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_p_011_0_0_2_reg_438 <= ap_phi_precharge_reg_pp0_iter0_p_011_0_0_2_reg_438;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_134 == 1'b1)) begin
        if (((valid_read_req_with_time_phi_fu_335_p4 == 1'd0) & (empty_n_5_fu_588_p1 == 1'd0))) begin
            ap_phi_precharge_reg_pp0_iter1_p_011_0_1_2_reg_423 <= device_dram_read_req_with_time_V_req_addr_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_p_011_0_1_2_reg_423 <= ap_phi_precharge_reg_pp0_iter0_p_011_0_1_2_reg_423;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_134 == 1'b1)) begin
        if (((valid_read_req_with_time_phi_fu_335_p4 == 1'd0) & (empty_n_5_fu_588_p1 == 1'd1))) begin
            ap_phi_precharge_reg_pp0_iter1_p_011_1_1_reg_366 <= device_dram_read_req_with_time_V_time_dout;
        end else if ((valid_read_req_with_time_phi_fu_335_p4 == 1'd1)) begin
            ap_phi_precharge_reg_pp0_iter1_p_011_1_1_reg_366 <= p_011_1_s_phi_fu_288_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_p_011_1_1_reg_366 <= ap_phi_precharge_reg_pp0_iter0_p_011_1_1_reg_366;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_134 == 1'b1)) begin
        if (((valid_read_req_with_time_phi_fu_335_p4 == 1'd0) & (empty_n_5_fu_588_p1 == 1'd0))) begin
            ap_phi_precharge_reg_pp0_iter1_p_011_1_2_reg_408 <= device_dram_read_req_with_time_V_time_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_p_011_1_2_reg_408 <= ap_phi_precharge_reg_pp0_iter0_p_011_1_2_reg_408;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_134 == 1'b1)) begin
        if (((1'd0 == valid_write_req_apply_with_time_phi_fu_347_p4) & (empty_n_6_fu_604_p1 == 1'd1))) begin
            ap_phi_precharge_reg_pp0_iter1_tmp_addr_1_reg_477 <= device_dram_write_req_apply_with_time_V_req_apply_addr_dout;
        end else if ((valid_write_req_apply_with_time_phi_fu_347_p4 == 1'd1)) begin
            ap_phi_precharge_reg_pp0_iter1_tmp_addr_1_reg_477 <= p_010_0_1_s_phi_fu_264_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_tmp_addr_1_reg_477 <= ap_phi_precharge_reg_pp0_iter0_tmp_addr_1_reg_477;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_134 == 1'b1)) begin
        if (((valid_read_req_with_time_phi_fu_335_p4 == 1'd0) & (empty_n_5_fu_588_p1 == 1'd1))) begin
            ap_phi_precharge_reg_pp0_iter1_tmp_addr_reg_376 <= device_dram_read_req_with_time_V_req_addr_dout;
        end else if ((valid_read_req_with_time_phi_fu_335_p4 == 1'd1)) begin
            ap_phi_precharge_reg_pp0_iter1_tmp_addr_reg_376 <= p_011_0_1_s_phi_fu_300_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_tmp_addr_reg_376 <= ap_phi_precharge_reg_pp0_iter0_tmp_addr_reg_376;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_134 == 1'b1)) begin
        if (((1'd0 == valid_write_req_apply_with_time_phi_fu_347_p4) & (empty_n_6_fu_604_p1 == 1'd1))) begin
            ap_phi_precharge_reg_pp0_iter1_tmp_num_1_reg_488 <= device_dram_write_req_apply_with_time_V_req_apply_num_dout;
        end else if ((valid_write_req_apply_with_time_phi_fu_347_p4 == 1'd1)) begin
            ap_phi_precharge_reg_pp0_iter1_tmp_num_1_reg_488 <= p_010_0_0_s_phi_fu_276_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_tmp_num_1_reg_488 <= ap_phi_precharge_reg_pp0_iter0_tmp_num_1_reg_488;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_134 == 1'b1)) begin
        if (((valid_read_req_with_time_phi_fu_335_p4 == 1'd0) & (empty_n_5_fu_588_p1 == 1'd1))) begin
            ap_phi_precharge_reg_pp0_iter1_tmp_num_reg_387 <= device_dram_read_req_with_time_V_req_num_dout;
        end else if ((valid_read_req_with_time_phi_fu_335_p4 == 1'd1)) begin
            ap_phi_precharge_reg_pp0_iter1_tmp_num_reg_387 <= p_011_0_0_s_phi_fu_312_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_tmp_num_reg_387 <= ap_phi_precharge_reg_pp0_iter0_tmp_num_reg_387;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_134 == 1'b1)) begin
        if (((valid_read_req_with_time_phi_fu_335_p4 == 1'd0) & (empty_n_5_fu_588_p1 == 1'd1))) begin
            ap_phi_precharge_reg_pp0_iter1_valid_read_req_with_time_1_reg_398 <= empty_n_3_nbread_fu_208_p4_0;
        end else if ((valid_read_req_with_time_phi_fu_335_p4 == 1'd1)) begin
            ap_phi_precharge_reg_pp0_iter1_valid_read_req_with_time_1_reg_398 <= valid_read_req_with_time_phi_fu_335_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_valid_read_req_with_time_1_reg_398 <= ap_phi_precharge_reg_pp0_iter0_valid_read_req_with_time_1_reg_398;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_134 == 1'b1)) begin
        if (((valid_read_req_with_time_phi_fu_335_p4 == 1'd0) & (empty_n_5_fu_588_p1 == 1'd0))) begin
            ap_phi_precharge_reg_pp0_iter1_valid_read_req_with_time_4_reg_453 <= empty_n_3_nbread_fu_208_p4_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_valid_read_req_with_time_4_reg_453 <= ap_phi_precharge_reg_pp0_iter0_valid_read_req_with_time_4_reg_453;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_134 == 1'b1)) begin
        if (((1'd0 == valid_write_req_apply_with_time_phi_fu_347_p4) & (empty_n_6_fu_604_p1 == 1'd1))) begin
            ap_phi_precharge_reg_pp0_iter1_valid_write_req_apply_with_time_1_reg_499 <= empty_n_4_nbread_fu_218_p4_0;
        end else if ((valid_write_req_apply_with_time_phi_fu_347_p4 == 1'd1)) begin
            ap_phi_precharge_reg_pp0_iter1_valid_write_req_apply_with_time_1_reg_499 <= valid_write_req_apply_with_time_phi_fu_347_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_valid_write_req_apply_with_time_1_reg_499 <= ap_phi_precharge_reg_pp0_iter0_valid_write_req_apply_with_time_1_reg_499;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_condition_134 == 1'b1)) begin
        if (((1'd0 == valid_write_req_apply_with_time_phi_fu_347_p4) & (1'd0 == empty_n_6_fu_604_p1))) begin
            ap_phi_precharge_reg_pp0_iter1_valid_write_req_apply_with_time_4_reg_554 <= empty_n_4_nbread_fu_218_p4_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_precharge_reg_pp0_iter1_valid_write_req_apply_with_time_4_reg_554 <= ap_phi_precharge_reg_pp0_iter0_valid_write_req_apply_with_time_4_reg_554;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        delay_cycle_cnt_reg_320 <= delay_cycle_cnt_1_reg_710;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        delay_cycle_cnt_reg_320 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        time_reg_355 <= time_1_fu_620_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        time_reg_355 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        valid_read_req_with_time_reg_331 <= valid_read_req_with_time_4_phi_fu_457_p6;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        valid_read_req_with_time_reg_331 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        valid_write_req_apply_with_time_reg_343 <= valid_write_req_apply_with_time_4_phi_fu_558_p6;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        valid_write_req_apply_with_time_reg_343 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        delay_cycle_cnt_1_reg_710 <= delay_cycle_cnt_1_fu_580_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (valid_read_req_with_time_phi_fu_335_p4 == 1'd0))) begin
        empty_n_5_reg_717 <= empty_n_3_nbread_fu_208_p4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == valid_write_req_apply_with_time_phi_fu_347_p4))) begin
        empty_n_6_reg_741 <= empty_n_4_nbread_fu_218_p4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        p_010_0_0_s_reg_272 <= p_010_0_0_2_phi_fu_543_p6;
        p_010_0_1_s_reg_260 <= p_010_0_1_2_phi_fu_528_p6;
        p_010_1_s_reg_248 <= p_010_1_2_phi_fu_513_p6;
        p_011_0_0_s_reg_308 <= p_011_0_0_2_phi_fu_442_p6;
        p_011_0_1_s_reg_296 <= p_011_0_1_2_phi_fu_427_p6;
        p_011_1_s_reg_284 <= p_011_1_2_phi_fu_412_p6;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        delay_cycle_cnt_phi_fu_324_p4 = delay_cycle_cnt_1_reg_710;
    end else begin
        delay_cycle_cnt_phi_fu_324_p4 = delay_cycle_cnt_reg_320;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == device_delay_cycle_cnts_V_empty_n))) begin
        device_delay_cycle_cnts_V_read = 1'b1;
    end else begin
        device_delay_cycle_cnts_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (((valid_read_req_with_time_reg_331 == 1'd1) & (1'd1 == or_cond_fu_649_p2)) | ((1'd1 == or_cond_fu_649_p2) & (empty_n_5_reg_717 == 1'd1))) & (1'b1 == (device_dram_read_req_delayed_V_num_full_n & device_dram_read_req_delayed_V_addr_full_n)))) begin
        device_dram_read_req_delayed_V_num1_update = 1'b1;
    end else begin
        device_dram_read_req_delayed_V_num1_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_11001 == 1'b0) & (valid_read_req_with_time_phi_fu_335_p4 == 1'd0) & (1'b1 == (device_dram_read_req_with_time_V_req_num_empty_n & device_dram_read_req_with_time_V_req_addr_empty_n & device_dram_read_req_with_time_V_time_empty_n)))) begin
        device_dram_read_req_with_time_V_time0_update = 1'b1;
    end else begin
        device_dram_read_req_with_time_V_time0_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter1) & (((valid_write_req_apply_with_time_reg_343 == 1'd1) & (1'd1 == or_cond1_fu_691_p2)) | ((1'd1 == or_cond1_fu_691_p2) & (empty_n_6_reg_741 == 1'd1))) & (1'b1 == (device_dram_write_req_apply_delayed_V_num_full_n & device_dram_write_req_apply_delayed_V_addr_full_n)))) begin
        device_dram_write_req_apply_delayed_V_num1_update = 1'b1;
    end else begin
        device_dram_write_req_apply_delayed_V_num1_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd0 == valid_write_req_apply_with_time_phi_fu_347_p4) & (1'b1 == (device_dram_write_req_apply_with_time_V_req_apply_num_empty_n & device_dram_write_req_apply_with_time_V_req_apply_addr_empty_n & device_dram_write_req_apply_with_time_V_time_empty_n)))) begin
        device_dram_write_req_apply_with_time_V_time0_update = 1'b1;
    end else begin
        device_dram_write_req_apply_with_time_V_time0_update = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (((valid_write_req_apply_with_time_reg_343 == 1'd1) & (1'd1 == or_cond1_fu_691_p2)) | ((1'd1 == or_cond1_fu_691_p2) & (empty_n_6_reg_741 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (((valid_write_req_apply_with_time_reg_343 == 1'd1) & (1'd0 == or_cond1_fu_691_p2)) | ((empty_n_6_reg_741 == 1'd1) & (1'd0 == or_cond1_fu_691_p2)))))) begin
        p_010_0_0_2_phi_fu_543_p6 = ap_phi_precharge_reg_pp0_iter1_tmp_num_1_reg_488;
    end else begin
        p_010_0_0_2_phi_fu_543_p6 = ap_phi_precharge_reg_pp0_iter1_p_010_0_0_2_reg_539;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        p_010_0_0_s_phi_fu_276_p4 = p_010_0_0_2_phi_fu_543_p6;
    end else begin
        p_010_0_0_s_phi_fu_276_p4 = p_010_0_0_s_reg_272;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (((valid_write_req_apply_with_time_reg_343 == 1'd1) & (1'd1 == or_cond1_fu_691_p2)) | ((1'd1 == or_cond1_fu_691_p2) & (empty_n_6_reg_741 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (((valid_write_req_apply_with_time_reg_343 == 1'd1) & (1'd0 == or_cond1_fu_691_p2)) | ((empty_n_6_reg_741 == 1'd1) & (1'd0 == or_cond1_fu_691_p2)))))) begin
        p_010_0_1_2_phi_fu_528_p6 = ap_phi_precharge_reg_pp0_iter1_tmp_addr_1_reg_477;
    end else begin
        p_010_0_1_2_phi_fu_528_p6 = ap_phi_precharge_reg_pp0_iter1_p_010_0_1_2_reg_524;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        p_010_0_1_s_phi_fu_264_p4 = p_010_0_1_2_phi_fu_528_p6;
    end else begin
        p_010_0_1_s_phi_fu_264_p4 = p_010_0_1_s_reg_260;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (((valid_write_req_apply_with_time_reg_343 == 1'd1) & (1'd1 == or_cond1_fu_691_p2)) | ((1'd1 == or_cond1_fu_691_p2) & (empty_n_6_reg_741 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (((valid_write_req_apply_with_time_reg_343 == 1'd1) & (1'd0 == or_cond1_fu_691_p2)) | ((empty_n_6_reg_741 == 1'd1) & (1'd0 == or_cond1_fu_691_p2)))))) begin
        p_010_1_2_phi_fu_513_p6 = ap_phi_precharge_reg_pp0_iter1_p_010_1_1_reg_467;
    end else begin
        p_010_1_2_phi_fu_513_p6 = ap_phi_precharge_reg_pp0_iter1_p_010_1_2_reg_509;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        p_010_1_s_phi_fu_252_p4 = p_010_1_2_phi_fu_513_p6;
    end else begin
        p_010_1_s_phi_fu_252_p4 = p_010_1_s_reg_248;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (((valid_read_req_with_time_reg_331 == 1'd1) & (1'd1 == or_cond_fu_649_p2)) | ((1'd1 == or_cond_fu_649_p2) & (empty_n_5_reg_717 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (((valid_read_req_with_time_reg_331 == 1'd1) & (1'd0 == or_cond_fu_649_p2)) | ((empty_n_5_reg_717 == 1'd1) & (1'd0 == or_cond_fu_649_p2)))))) begin
        p_011_0_0_2_phi_fu_442_p6 = ap_phi_precharge_reg_pp0_iter1_tmp_num_reg_387;
    end else begin
        p_011_0_0_2_phi_fu_442_p6 = ap_phi_precharge_reg_pp0_iter1_p_011_0_0_2_reg_438;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        p_011_0_0_s_phi_fu_312_p4 = p_011_0_0_2_phi_fu_442_p6;
    end else begin
        p_011_0_0_s_phi_fu_312_p4 = p_011_0_0_s_reg_308;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (((valid_read_req_with_time_reg_331 == 1'd1) & (1'd1 == or_cond_fu_649_p2)) | ((1'd1 == or_cond_fu_649_p2) & (empty_n_5_reg_717 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (((valid_read_req_with_time_reg_331 == 1'd1) & (1'd0 == or_cond_fu_649_p2)) | ((empty_n_5_reg_717 == 1'd1) & (1'd0 == or_cond_fu_649_p2)))))) begin
        p_011_0_1_2_phi_fu_427_p6 = ap_phi_precharge_reg_pp0_iter1_tmp_addr_reg_376;
    end else begin
        p_011_0_1_2_phi_fu_427_p6 = ap_phi_precharge_reg_pp0_iter1_p_011_0_1_2_reg_423;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        p_011_0_1_s_phi_fu_300_p4 = p_011_0_1_2_phi_fu_427_p6;
    end else begin
        p_011_0_1_s_phi_fu_300_p4 = p_011_0_1_s_reg_296;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (((valid_read_req_with_time_reg_331 == 1'd1) & (1'd1 == or_cond_fu_649_p2)) | ((1'd1 == or_cond_fu_649_p2) & (empty_n_5_reg_717 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0) & (((valid_read_req_with_time_reg_331 == 1'd1) & (1'd0 == or_cond_fu_649_p2)) | ((empty_n_5_reg_717 == 1'd1) & (1'd0 == or_cond_fu_649_p2)))))) begin
        p_011_1_2_phi_fu_412_p6 = ap_phi_precharge_reg_pp0_iter1_p_011_1_1_reg_366;
    end else begin
        p_011_1_2_phi_fu_412_p6 = ap_phi_precharge_reg_pp0_iter1_p_011_1_2_reg_408;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        p_011_1_s_phi_fu_288_p4 = p_011_1_2_phi_fu_412_p6;
    end else begin
        p_011_1_s_phi_fu_288_p4 = p_011_1_s_reg_284;
    end
end

always @ (*) begin
    if ((ap_condition_175 == 1'b1)) begin
        if ((ap_condition_226 == 1'b1)) begin
            valid_read_req_with_time_4_phi_fu_457_p6 = ap_phi_precharge_reg_pp0_iter1_valid_read_req_with_time_1_reg_398;
        end else if ((ap_condition_216 == 1'b1)) begin
            valid_read_req_with_time_4_phi_fu_457_p6 = p_valid_read_req_with_time_1_fu_661_p2;
        end else begin
            valid_read_req_with_time_4_phi_fu_457_p6 = ap_phi_precharge_reg_pp0_iter1_valid_read_req_with_time_4_reg_453;
        end
    end else begin
        valid_read_req_with_time_4_phi_fu_457_p6 = ap_phi_precharge_reg_pp0_iter1_valid_read_req_with_time_4_reg_453;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        valid_read_req_with_time_phi_fu_335_p4 = valid_read_req_with_time_4_phi_fu_457_p6;
    end else begin
        valid_read_req_with_time_phi_fu_335_p4 = valid_read_req_with_time_reg_331;
    end
end

always @ (*) begin
    if ((ap_condition_175 == 1'b1)) begin
        if ((ap_condition_272 == 1'b1)) begin
            valid_write_req_apply_with_time_4_phi_fu_558_p6 = ap_phi_precharge_reg_pp0_iter1_valid_write_req_apply_with_time_1_reg_499;
        end else if ((ap_condition_262 == 1'b1)) begin
            valid_write_req_apply_with_time_4_phi_fu_558_p6 = p_valid_write_req_apply_with_time_1_fu_703_p2;
        end else begin
            valid_write_req_apply_with_time_4_phi_fu_558_p6 = ap_phi_precharge_reg_pp0_iter1_valid_write_req_apply_with_time_4_reg_554;
        end
    end else begin
        valid_write_req_apply_with_time_4_phi_fu_558_p6 = ap_phi_precharge_reg_pp0_iter1_valid_write_req_apply_with_time_4_reg_554;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0))) begin
        valid_write_req_apply_with_time_phi_fu_347_p4 = valid_write_req_apply_with_time_4_phi_fu_558_p6;
    end else begin
        valid_write_req_apply_with_time_phi_fu_347_p4 = valid_write_req_apply_with_time_reg_343;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_134 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_11001 == 1'b0));
end

always @ (*) begin
    ap_condition_175 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0 == 1'b0));
end

always @ (*) begin
    ap_condition_216 = (((valid_read_req_with_time_reg_331 == 1'd1) & (1'd1 == or_cond_fu_649_p2)) | ((1'd1 == or_cond_fu_649_p2) & (empty_n_5_reg_717 == 1'd1)));
end

always @ (*) begin
    ap_condition_226 = (((valid_read_req_with_time_reg_331 == 1'd1) & (1'd0 == or_cond_fu_649_p2)) | ((empty_n_5_reg_717 == 1'd1) & (1'd0 == or_cond_fu_649_p2)));
end

always @ (*) begin
    ap_condition_262 = (((valid_write_req_apply_with_time_reg_343 == 1'd1) & (1'd1 == or_cond1_fu_691_p2)) | ((1'd1 == or_cond1_fu_691_p2) & (empty_n_6_reg_741 == 1'd1)));
end

always @ (*) begin
    ap_condition_272 = (((valid_write_req_apply_with_time_reg_343 == 1'd1) & (1'd0 == or_cond1_fu_691_p2)) | ((empty_n_6_reg_741 == 1'd1) & (1'd0 == or_cond1_fu_691_p2)));
end

assign ap_done = 1'b0;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_precharge_reg_pp0_iter0_p_010_0_0_2_reg_539 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_p_010_0_1_2_reg_524 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_p_010_1_1_reg_467 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_p_010_1_2_reg_509 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_p_011_0_0_2_reg_438 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_p_011_0_1_2_reg_423 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_p_011_1_1_reg_366 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_p_011_1_2_reg_408 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_tmp_addr_1_reg_477 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_tmp_addr_reg_376 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_tmp_num_1_reg_488 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_tmp_num_reg_387 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_valid_read_req_with_time_1_reg_398 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_valid_read_req_with_time_4_reg_453 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_valid_write_req_apply_with_time_1_reg_499 = 'bx;

assign ap_phi_precharge_reg_pp0_iter0_valid_write_req_apply_with_time_4_reg_554 = 'bx;

assign ap_ready = 1'b0;

assign delay_cycle_cnt_1_fu_580_p0 = device_delay_cycle_cnts_V_empty_n;

assign delay_cycle_cnt_1_fu_580_p3 = ((delay_cycle_cnt_1_fu_580_p0[0:0] === 1'b1) ? delay_cycle_cnt_2_fu_576_p1 : delay_cycle_cnt_phi_fu_324_p4);

assign delay_cycle_cnt_2_fu_576_p1 = device_delay_cycle_cnts_V_dout;

assign device_dram_read_req_delayed_V_addr_din = ap_phi_precharge_reg_pp0_iter1_tmp_addr_reg_376;

assign device_dram_read_req_delayed_V_addr_write = device_dram_read_req_delayed_V_num1_update;

assign device_dram_read_req_delayed_V_num_din = ap_phi_precharge_reg_pp0_iter1_tmp_num_reg_387;

assign device_dram_read_req_delayed_V_num_write = device_dram_read_req_delayed_V_num1_update;

assign device_dram_read_req_with_time_V_req_addr_read = device_dram_read_req_with_time_V_time0_update;

assign device_dram_read_req_with_time_V_req_num_read = device_dram_read_req_with_time_V_time0_update;

assign device_dram_read_req_with_time_V_time_read = device_dram_read_req_with_time_V_time0_update;

assign device_dram_write_req_apply_delayed_V_addr_din = ap_phi_precharge_reg_pp0_iter1_tmp_addr_1_reg_477;

assign device_dram_write_req_apply_delayed_V_addr_write = device_dram_write_req_apply_delayed_V_num1_update;

assign device_dram_write_req_apply_delayed_V_num_din = ap_phi_precharge_reg_pp0_iter1_tmp_num_1_reg_488;

assign device_dram_write_req_apply_delayed_V_num_write = device_dram_write_req_apply_delayed_V_num1_update;

assign device_dram_write_req_apply_with_time_V_req_apply_addr_read = device_dram_write_req_apply_with_time_V_time0_update;

assign device_dram_write_req_apply_with_time_V_req_apply_num_read = device_dram_write_req_apply_with_time_V_time0_update;

assign device_dram_write_req_apply_with_time_V_time_read = device_dram_write_req_apply_with_time_V_time0_update;

assign empty_n_3_nbread_fu_208_p4_0 = (device_dram_read_req_with_time_V_req_num_empty_n & device_dram_read_req_with_time_V_req_addr_empty_n & device_dram_read_req_with_time_V_time_empty_n);

assign empty_n_4_nbread_fu_218_p4_0 = (device_dram_write_req_apply_with_time_V_req_apply_num_empty_n & device_dram_write_req_apply_with_time_V_req_apply_addr_empty_n & device_dram_write_req_apply_with_time_V_time_empty_n);

assign empty_n_5_fu_588_p1 = empty_n_3_nbread_fu_208_p4_0;

assign empty_n_6_fu_604_p1 = empty_n_4_nbread_fu_218_p4_0;

assign full_n_1_nbwrite_fu_238_p5 = (device_dram_write_req_apply_delayed_V_num_full_n & device_dram_write_req_apply_delayed_V_addr_full_n);

assign full_n_nbwrite_fu_228_p5 = (device_dram_read_req_delayed_V_num_full_n & device_dram_read_req_delayed_V_addr_full_n);

assign not_full_n_i7_fu_697_p2 = (full_n_1_nbwrite_fu_238_p5 ^ 1'd1);

assign not_full_n_i_fu_655_p2 = (full_n_nbwrite_fu_228_p5 ^ 1'd1);

assign or_cond1_fu_691_p2 = (rev8_fu_679_p2 | tmp_s_fu_685_p2);

assign or_cond_fu_649_p2 = (rev6_fu_637_p2 | tmp_5_fu_643_p2);

assign p_valid_read_req_with_time_1_fu_661_p2 = (ap_phi_precharge_reg_pp0_iter1_valid_read_req_with_time_1_reg_398 & not_full_n_i_fu_655_p2);

assign p_valid_write_req_apply_with_time_1_fu_703_p2 = (ap_phi_precharge_reg_pp0_iter1_valid_write_req_apply_with_time_1_reg_499 & not_full_n_i7_fu_697_p2);

assign rev6_fu_637_p2 = (ult_fu_631_p2 ^ 1'd1);

assign rev8_fu_679_p2 = (ult7_fu_673_p2 ^ 1'd1);

assign time_1_fu_620_p2 = (time_reg_355 + 64'd1);

assign tmp_3_fu_626_p2 = (ap_phi_precharge_reg_pp0_iter1_p_011_1_1_reg_366 + delay_cycle_cnt_1_reg_710);

assign tmp_5_fu_643_p2 = ((ap_phi_precharge_reg_pp0_iter1_p_011_1_1_reg_366 > time_reg_355) ? 1'b1 : 1'b0);

assign tmp_8_fu_668_p2 = (ap_phi_precharge_reg_pp0_iter1_p_010_1_1_reg_467 + delay_cycle_cnt_1_reg_710);

assign tmp_s_fu_685_p2 = ((ap_phi_precharge_reg_pp0_iter1_p_010_1_1_reg_467 > time_reg_355) ? 1'b1 : 1'b0);

assign ult7_fu_673_p2 = ((time_reg_355 < tmp_8_fu_668_p2) ? 1'b1 : 1'b0);

assign ult_fu_631_p2 = ((time_reg_355 < tmp_3_fu_626_p2) ? 1'b1 : 1'b0);

endmodule //device_dram_delay_unit
